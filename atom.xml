<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>程序员七平</title>
  <icon>https://www.gravatar.com/avatar/36bf0b263c9f9fbd67bf7dac97a6ae64</icon>
  <subtitle>日拱一卒</subtitle>
  <link href="https://lixiaw.github.io/atom.xml" rel="self"/>
  
  <link href="https://lixiaw.github.io/"/>
  <updated>2021-05-09T13:22:53.137Z</updated>
  <id>https://lixiaw.github.io/</id>
  
  <author>
    <name>程序员七平</name>
    <email>lixiahanyu@outlook.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java系列-SpringBoot-1-入参及出参扩展XML支持</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/Java%E7%B3%BB%E5%88%97-SpringBoot-1-%E5%85%A5%E5%8F%82%E5%8F%8A%E5%87%BA%E5%8F%82%E6%89%A9%E5%B1%95XML%E6%94%AF%E6%8C%81.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/Java%E7%B3%BB%E5%88%97-SpringBoot-1-%E5%85%A5%E5%8F%82%E5%8F%8A%E5%87%BA%E5%8F%82%E6%89%A9%E5%B1%95XML%E6%94%AF%E6%8C%81.html</id>
    <published>2021-05-09T10:51:10.000Z</published>
    <updated>2021-05-09T13:22:53.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java系列-SpringBoot-1-入参及出参扩展XML支持"><a href="#Java系列-SpringBoot-1-入参及出参扩展XML支持" class="headerlink" title="Java系列-SpringBoot-1-入参及出参扩展XML支持"></a>Java系列-SpringBoot-1-入参及出参扩展XML支持</h2><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>现在Java后端项目基本都使用json格式请求和响应数据，因此一般的配置返回json格式数据便能够满足需求。但仍有一些场景需要支持xml格式的请求和响应数据，针对此类需求，<br>本文在SpringBoot框架上进行配置说明。 </p><p>注：原spring mvc使用xml配置也支持此配置。</p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>SpringBoot 版本：2.2.8.RELEASE</li></ul><h1 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h1><h2 id="Http请求Header中Accept和Content-Type的区别"><a href="#Http请求Header中Accept和Content-Type的区别" class="headerlink" title="Http请求Header中Accept和Content-Type的区别"></a>Http请求Header中Accept和Content-Type的区别</h2><p>Http报头分为通用报头，请求报头，响应报头和实体报头。</p><p>请求方的http报头结构：通用报头|请求报头|实体报头</p><p>响应方的http报头结构：通用报头|响应报头|实体报头</p><ul><li><code>Accept</code>：属于请求头，代表发送端（客户端）希望接受的数据类型。<ul><li><code>application/xml</code>，</li><li><code>application/json</code>；java枚举：<code>MediaType</code></li></ul></li><li><code>Content-Type</code>：代表发送端（客户端|服务器）发送的实体数据的数据类型<ul><li><code>application/xml</code>，</li><li><code>application/json</code>；java枚举：<code>MediaType</code></li></ul></li></ul><p>常见的媒体格式类型如下：</p><ul><li>text&#x2F;html ： HTML格式</li><li>text&#x2F;plain ：纯文本格式      </li><li>text&#x2F;xml ：  XML格式</li><li>image&#x2F;gif ：gif图片格式    </li><li>image&#x2F;jpeg ：jpg图片格式 </li><li>image&#x2F;png：png图片格式</li><li>multipart&#x2F;form-data ： 表单中进行文件上传时使用该格式</li></ul><p>以application开头的媒体格式类型：</p><ul><li>application&#x2F;xhtml+xml ：XHTML格式</li><li>application&#x2F;xml     ： XML数据格式</li><li>application&#x2F;atom+xml  ：Atom XML聚合格式    </li><li>application&#x2F;json    ： JSON数据格式</li><li>application&#x2F;pdf       ：pdf格式  </li><li>application&#x2F;msword  ： Word文档格式</li><li>application&#x2F;octet-stream ： 二进制流数据（如常见的文件下载）</li><li>application&#x2F;x-www-form-urlencoded ： <form encType=””>中默认的encType，form表单数据被编码为key&#x2F;value格式发送到服务器（表单默认的提交数据的格式）</li></ul><h2 id="Spring中consumes和produces的区别"><a href="#Spring中consumes和produces的区别" class="headerlink" title="Spring中consumes和produces的区别"></a>Spring中consumes和produces的区别</h2><p><code>SpringMvc</code>中如<code>@RequestMapping</code>之类的注解（<code>@PostMapping</code>等）有<code>consumes</code>和<code>produces</code>这两个属性；</p><ul><li><code>consumes</code>: 指定处理请求的提交内容类型（Content-Type），例如application&#x2F;json, text&#x2F;html;</li><li><code>produces</code>: 指定返回的内容类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回；</li><li><code>params</code>： 指定request中必须包含某些参数值是，才让该方法处理</li><li><code>headers</code>： 指定request中必须包含某些指定的header值，才能让该方法处理请求</li></ul><p>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/api/v1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiTestController</span> &#123;</span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;/pay&quot;,</span></span><br><span class="line"><span class="meta">            consumes = &#123;MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE&#125;,</span></span><br><span class="line"><span class="meta">            produces = &#123;MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> ApiResponse&lt;TestResponse&gt; <span class="title function_">testPay</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> TestRequest request)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;测试post方法：【&#123;&#125;】&quot;</span>, JSON.toJSONString(request));</span><br><span class="line">        <span class="type">TestResponse</span> <span class="variable">response</span> <span class="operator">=</span> TestResponse.builder()</span><br><span class="line">                .field1(<span class="string">&quot;field1&quot;</span>)</span><br><span class="line">                .field2(<span class="string">&quot;field2&quot;</span>)</span><br><span class="line">                .field3(<span class="string">&quot;field3&quot;</span>)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> ApiResponse.ok(<span class="string">&quot;请求成功&quot;</span>, <span class="string">&quot;1234&quot;</span>, <span class="string">&quot;业务成功&quot;</span>, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SpringMVC输出格式"><a href="#SpringMVC输出格式" class="headerlink" title="SpringMVC输出格式"></a>SpringMVC输出格式</h2><p>在SpringMVC使用ContentNegotiation来判断用户请求希望得到什么格式的数据。</p><p>ContentNegotiation 设置了三种方式来设置相应数据的格式，优先级由上至下：</p><ul><li>通过请求URL后缀：&#x2F;list.html 返回html格式；</li><li>通过请求的参数：&#x2F;list?format&#x3D;html 该设置默认不开启，默认key是format。</li><li>通过HTTP Header的Accept：Accept:application&#x2F;xml</li></ul><p>本文在springboot中配置扩展xml格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SpringMvc中配置（如需修改默认配置，在SpringBoot中也可这样配置）</span></span><br><span class="line"><span class="comment">// ApiMessageConverterConfig extends WebMvcConfigurerAdapter</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiMessageConverterConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configureContentNegotiation</span><span class="params">(ContentNegotiationConfigurer configurer)</span> &#123;</span><br><span class="line">        configurer</span><br><span class="line">                <span class="comment">// 是否通过请求Url的扩展名来决定media type，默认为false（不支持），扩展名指的xxx.json、xxx.xml等形式</span></span><br><span class="line">                .favorPathExtension(<span class="literal">true</span>)</span><br><span class="line">                <span class="comment">// favorParameter:这里是是否启用参数支持，默认是false（不支持）；例如  /user/&#123;userid&#125;?format=json</span></span><br><span class="line">                .favorParameter(<span class="literal">true</span>)</span><br><span class="line">                .parameterName(<span class="string">&quot;mediaType&quot;</span>)</span><br><span class="line">                <span class="comment">// 不检查Accept请求头 ，默认是false（不忽略），即请求时指定的contentType:application/json等</span></span><br><span class="line">                .ignoreAcceptHeader(<span class="literal">false</span>)</span><br><span class="line">                <span class="comment">/* 设置默认的media type */</span></span><br><span class="line">                .defaultContentType(MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML)</span><br><span class="line">                <span class="comment">// mediaTypes：配置扩展名到mimeType的映射，json和xml的映射；</span></span><br><span class="line">                .mediaType(<span class="string">&quot;xml&quot;</span>, MediaType.APPLICATION_XML)</span><br><span class="line">                .mediaType(<span class="string">&quot;html&quot;</span>, MediaType.TEXT_HTML)</span><br><span class="line">                .mediaType(<span class="string">&quot;json&quot;</span>, MediaType.APPLICATION_JSON);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>pom.xml中引入依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 加入jackson-dataformat-xml依赖，Spring Boot就会自动引入MappingJackson2XmlHttpMessageConverter的实现：--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.dataformat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-dataformat-xml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>请求实体类配置，需要使用上述依赖中<code>@JacksonXmlRootElement</code>和<code>@JacksonXmlProperty</code>注解：<br>注：xml格式的必须指定根节点；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@JacksonXmlRootElement(localName = &quot;request&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestRequest</span> <span class="keyword">extends</span> <span class="title class_">ApiPayV1Request</span>&lt;TestResponse&gt; <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> -<span class="number">3135169148798610260L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@JacksonXmlProperty(localName = &quot;field1&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String field1;</span><br><span class="line">    <span class="keyword">private</span> String field2;</span><br><span class="line">    <span class="keyword">private</span> String field3;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;TestResponse&gt; <span class="title function_">getResponseClass</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> TestResponse.class;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>响应实体类配置，同上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JacksonXmlRootElement(localName = &quot;root&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApiResponse</span>&lt;T&gt; <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> -<span class="number">3798634638472229369L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlProperty(localName = &quot;success&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> success;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回状态编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlProperty(localName = &quot;code&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回状态描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlProperty(localName = &quot;message&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回业务执行状态码</span></span><br><span class="line"><span class="comment">     * 需要特殊处理的</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlProperty(localName = &quot;sub_code&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String sub_code;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回业务执行状态描述</span></span><br><span class="line"><span class="comment">     * 需要特殊处理的</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlProperty(localName = &quot;sub_msg&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String sub_msg;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接口调用时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlProperty(localName = &quot;time&quot;)</span></span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyyMMddHHmmssSSS&quot;, timezone = &quot;GMT+8&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Timestamp time;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接口返回数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlProperty(localName = &quot;data&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接口签名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@JacksonXmlProperty(localName = &quot;sign&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String sign;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://blog.csdn.net/shinebar/article/details/54408020">Http请求中Content-Type讲解以及在Spring MVC注解中produce和consumes配置详解</a></li><li><a href="https://segmentfault.com/a/1190000021074627">Spring Boot配置接口WebMvcConfigurer</a></li><li><a href="https://blog.csdn.net/fmwind/article/details/81235401">Spring Boot配置接口 WebMvcConfigurer</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Java系列-SpringBoot-1-入参及出参扩展XML支持&quot;&gt;&lt;a href=&quot;#Java系列-SpringBoot-1-入参及出参扩展XML支持&quot; class=&quot;headerlink&quot; title=&quot;Java系列-SpringBoot-1-入参及出参扩展X</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux使用6—CentOS7运维常用命令</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A86%E2%80%94CentOS7%E8%BF%90%E7%BB%B4%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A86%E2%80%94CentOS7%E8%BF%90%E7%BB%B4%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html</id>
    <published>2021-02-27T16:52:30.000Z</published>
    <updated>2021-03-31T14:32:23.168Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux使用6—CentOS7运维常用命令"><a href="#Linux使用6—CentOS7运维常用命令" class="headerlink" title="Linux使用6—CentOS7运维常用命令"></a>Linux使用6—CentOS7运维常用命令</h1><h2 id="一、linux下进程号查看和pid查看端口号"><a href="#一、linux下进程号查看和pid查看端口号" class="headerlink" title="一、linux下进程号查看和pid查看端口号"></a>一、linux下进程号查看和pid查看端口号</h2><blockquote><p>根据ps -aux | grep xxx就是很快实现进程名和进程号的互查， 所以我们只说进程号pid就行。 如下示例中， 进程pid常驻。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 根据进程pid查端口：</span><br><span class="line">   lsof -i | grep pid</span><br><span class="line">2. 根据端口port查进程（某次面试还考过）：</span><br><span class="line">   lsof -i:port     </span><br><span class="line">3. 根据进程pid查端口：</span><br><span class="line">   netstat -nap | grep pid</span><br><span class="line">4. 根据端口port查进程：</span><br><span class="line">   netstat -nap | grep port</span><br></pre></td></tr></table></figure><h2 id="二、linux下top命令使用"><a href="#二、linux下top命令使用" class="headerlink" title="二、linux下top命令使用"></a>二、linux下top命令使用</h2><blockquote><p>top命令用于实时监测系统资源使用状况，包含，进程、cpu，内存等。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                                          </span><br><span class="line">14410 root      20   0 5532880   1.2g  23764 S   3.0 16.8   1:00.47 java                                             </span><br><span class="line">31869 root      10 -10  140084  12096   1392 S   0.7  0.2   6:01.34 AliYunDun                                        </span><br><span class="line"> 2767 mysql     20   0 2681972 464940      0 S   0.3  6.0  33:13.39 mysqld                                           </span><br><span class="line"> 3370 root      20   0 5693644   1.0g   2224 S   0.3 13.9   2:21.60 java                                             </span><br><span class="line"> 8278 root      20   0 5783204   1.3g   1288 S   0.3 17.7 227:28.38 java                                             </span><br><span class="line">24825 root      20   0   50304   8684    128 S   0.3  0.1  38:29.82 redis-server                                     </span><br><span class="line">27133 root      20   0 5654132 990464      0 S   0.3 12.8   4:44.72 java                                             </span><br><span class="line">    1 root      20   0   51752   2636   1224 S   0.0  0.0   0:19.22 systemd </span><br></pre></td></tr></table></figure><h2 id="三、linux下free命令使用"><a href="#三、linux下free命令使用" class="headerlink" title="三、linux下free命令使用"></a>三、linux下free命令使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># total：表示 总计物理内存的大小。used+free+buff/cache</span><br><span class="line"># used：表示 已使用多少。</span><br><span class="line"># free：表示 可用内存多少。</span><br><span class="line"># Shared：表示多个进程共享的内存总额。</span><br><span class="line"># Buffers/cached：表示 磁盘缓存的大小。</span><br><span class="line">available: 是一个估计值，比较准确</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           7.4G        5.3G        1.6G        760K        487M        1.9G</span><br><span class="line">Swap:            0B          0B          0B</span><br><span class="line"></span><br><span class="line">top和free看的结果一致；</span><br><span class="line">free命令中used的结果，不包含buffer/cache</span><br><span class="line">旧版本的free命令才有：-/+ buffers/cache，新版的加入了available参数</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Linux使用6—CentOS7运维常用命令&quot;&gt;&lt;a href=&quot;#Linux使用6—CentOS7运维常用命令&quot; class=&quot;headerlink&quot; title=&quot;Linux使用6—CentOS7运维常用命令&quot;&gt;&lt;/a&gt;Linux使用6—CentOS7运维常用</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux使用5—Linux使用5—CentOS7离线安装ftp</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A85%E2%80%94CentOS7%E5%AE%89%E8%A3%85ftp.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A85%E2%80%94CentOS7%E5%AE%89%E8%A3%85ftp.html</id>
    <published>2021-02-27T16:52:30.000Z</published>
    <updated>2021-03-30T16:24:32.932Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-离线安装-FTP"><a href="#CentOS-7-离线安装-FTP" class="headerlink" title="CentOS 7 离线安装 FTP"></a>CentOS 7 离线安装 FTP</h1><h2 id="一、检查是否已经安装，什么都没出现，说明没有安装。"><a href="#一、检查是否已经安装，什么都没出现，说明没有安装。" class="headerlink" title="一、检查是否已经安装，什么都没出现，说明没有安装。"></a>一、检查是否已经安装，什么都没出现，说明没有安装。</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep vsftpd</span><br></pre></td></tr></table></figure><h2 id="二、下载rpm包"><a href="#二、下载rpm包" class="headerlink" title="二、下载rpm包"></a>二、下载rpm包</h2><p>下载对应版本的FTP服务器：<a href="http://rpmfind.net/linux/rpm2html/search.php?query=vsftpd(x86-64)">http://rpmfind.net/linux/rpm2html/search.php?query=vsftpd(x86-64)</a></p><p>我下载这个<code>vsftpd-3.0.2-28.el7.x86_64.rpm</code>;</p><p>搜索 <code>ftp(x86-64)</code>下载ftp客户端，为了测试准备。我下载这个<code>ftp-0.17-67.el7.x86_64.rpm</code></p><h2 id="三、安装vsftpd"><a href="#三、安装vsftpd" class="headerlink" title="三、安装vsftpd"></a>三、安装vsftpd</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">将下载的rpm包上传到服务器，然后执行以下命令安装：</span><br><span class="line">rpm -ivh vsftpd-3.0.2-28.el7.x86_64.rpm --force --nodeps</span><br></pre></td></tr></table></figure><h2 id="四、配置ftp，主要配置-vsftpd-conf-文件"><a href="#四、配置ftp，主要配置-vsftpd-conf-文件" class="headerlink" title="四、配置ftp，主要配置 vsftpd.conf 文件"></a>四、配置ftp，主要配置 vsftpd.conf 文件</h2><p>配置文件目录<code>vim /etc/vsftpd/vsftpd.conf</code>，修改为以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 禁止匿名登入</span><br><span class="line">anonymous_enable=NO</span><br><span class="line"></span><br><span class="line"># 对用户访问只限制在主目录，不能访问其他目录</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">chroot_list_enable=NO</span><br><span class="line"># (default follows)</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">userlist_deny=NO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reverse_lookup_enable=NO</span><br><span class="line">allow_writeable_chroot=YES</span><br><span class="line">local_root=/home/ftp</span><br><span class="line">pasv_enable=YES</span><br><span class="line">pasv_min_port=6000</span><br><span class="line">pasv_max_port=7000</span><br></pre></td></tr></table></figure><h2 id="五、开放相关防火墙端口-21-6000-7000端口"><a href="#五、开放相关防火墙端口-21-6000-7000端口" class="headerlink" title="五、开放相关防火墙端口(21,6000-7000端口)"></a>五、开放相关防火墙端口(21,6000-7000端口)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=6000-7000/tcp --permanent   # 开放6000-7000端口</span><br><span class="line"> </span><br><span class="line">firewall-cmd --zone=public --remove-port=6000-7000/tcp --permanent  #关闭6000-7000端口</span><br><span class="line"> </span><br><span class="line">firewall-cmd --reload   # 配置立即生效</span><br><span class="line"> </span><br><span class="line">firewall-cmd --zone=public --list-ports   #查看防火墙所有开放的端口</span><br></pre></td></tr></table></figure><p>添加ftp用户及权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#添加用户 ftpup，并指定该用户的主目录为/home/ftp</span><br><span class="line">useradd -d /home/ftp -s /sbin/nologin ftpup</span><br><span class="line">#为用户ftpup设置密码</span><br><span class="line">passwd ftpup   </span><br><span class="line">#输入用户密码    #输入密码</span><br><span class="line">#再次输入密码    #再次输入密码</span><br><span class="line"></span><br><span class="line"># 文件夹权限</span><br><span class="line">chmod -R 755 /home/ftp</span><br><span class="line">chown -R ftpup /home/ftp</span><br></pre></td></tr></table></figure><p>重启ftp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#停止ftp</span><br><span class="line">service vsftpd stop</span><br><span class="line">#启动ftp</span><br><span class="line">service vsftpd start </span><br><span class="line">#重启ftp</span><br><span class="line">service vsftpd restart </span><br></pre></td></tr></table></figure><h1 id="安装ftp客户端"><a href="#安装ftp客户端" class="headerlink" title="安装ftp客户端"></a>安装ftp客户端</h1><h2 id="一、同样先检查是否安装："><a href="#一、同样先检查是否安装：" class="headerlink" title="一、同样先检查是否安装："></a>一、同样先检查是否安装：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep ftp</span><br></pre></td></tr></table></figure><h2 id="二、以强制安装方式-进行安装："><a href="#二、以强制安装方式-进行安装：" class="headerlink" title="二、以强制安装方式 进行安装："></a>二、以强制安装方式 进行安装：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh ftp-0.17-67.el7.x86_64.rpm --force --nodeps</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三、测试"><a href="#三、测试" class="headerlink" title="三、测试"></a>三、测试</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ftp localhost</span><br><span class="line">#输入用户名</span><br><span class="line">#输入密码</span><br><span class="line">#提示：login successful </span><br></pre></td></tr></table></figure><h2 id="四、常用命令"><a href="#四、常用命令" class="headerlink" title="四、常用命令"></a>四、常用命令</h2><p>1、将源主机文件传到连接的主机上 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">put 源文件路径 目标文件路径 </span><br></pre></td></tr></table></figure><p>2、将目标主机文件传到源主机上 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get 目标文件路径 源文件路径 </span><br></pre></td></tr></table></figure><p>3、退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure><h1 id="问题一："><a href="#问题一：" class="headerlink" title="问题一："></a>问题一：</h1><blockquote><p>Connected to localhost (::1).<br> 220 (vsFTPd 3.0.2)<br> Name (localhost:root): ftpup<br> 530 Permission denied.</p></blockquote><p>处理：<code>/etc/vsftpd/vsftpd.conf</code>中一下内容从<code>YES</code>修改为<code>NO</code>，如下<br><code>userlist_enable=NO</code></p><h1 id="问题二："><a href="#问题二：" class="headerlink" title="问题二："></a>问题二：</h1><blockquote><p>331 Please specify the password.</p></blockquote><p>出现错误的原因，是因为ubuntu启用了PAM,所在用到vsftp时需要用到 &#x2F;etc&#x2F;pam.d&#x2F;vsftpd 这个文件（默认源码安装的不会有这个文件），因此除了匿名用户外本地用户无法登录。所以解决的办法就是删除这个文件</p><p>处理：<code>rm /etc/pam.d/vsftpd</code> </p><p><a href="https://blog.csdn.net/yunhan0609/article/details/83055883">https://blog.csdn.net/yunhan0609/article/details/83055883</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CentOS-7-离线安装-FTP&quot;&gt;&lt;a href=&quot;#CentOS-7-离线安装-FTP&quot; class=&quot;headerlink&quot; title=&quot;CentOS 7 离线安装 FTP&quot;&gt;&lt;/a&gt;CentOS 7 离线安装 FTP&lt;/h1&gt;&lt;h2 id=&quot;一、检查是</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux使用1-1—Centos7离线安装MySQL服务</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A81_1%E2%80%94CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A81_1%E2%80%94CentOS7%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85MySQL%E6%9C%8D%E5%8A%A1.html</id>
    <published>2021-02-27T10:01:28.000Z</published>
    <updated>2021-02-27T10:15:53.309Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Centos7离线安装MySQL服务"><a href="#Centos7离线安装MySQL服务" class="headerlink" title="Centos7离线安装MySQL服务"></a>Centos7离线安装MySQL服务</h2><span id="more"></span><h1 id="0-前言"><a href="#0-前言" class="headerlink" title="0 前言"></a>0 前言</h1><p>网上已经有那么多的关于<code>CentOS 7</code>如何安装<code>MySQL</code>的文章了，但是很多都是在线安装；<br>由于很多时候，在生产环境进行部署时，生产机器都是不可能直接连公网的，导致网上很多的文章没有借鉴意义；</p><h1 id="1-下载"><a href="#1-下载" class="headerlink" title="1 下载"></a>1 下载</h1><p>在有网的环境下载 <code>mysql</code> 的安装包：</p><p><a href="http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz">http://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz</a></p><p>或者去<a href="https://dev.mysql.com/downloads/mysql/">点击访问官网</a>点击下载：</p><p>并把 安装包<code>mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz</code>拷贝到 离线生产环境<code>/usr/local</code>目录下。</p><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2 安装"></a>2 安装</h1><h2 id="2-1-创建用户"><a href="#2-1-创建用户" class="headerlink" title="2.1 创建用户"></a>2.1 创建用户</h2><p>为了方便数据库管理，对于安装的<code>MySQL</code>数据库，生产上我们都会建立一个<code>mysql</code>用户和<code>mysql</code>用户组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加mysql用户组</span></span><br><span class="line">groupadd mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加mysql用户</span></span><br><span class="line">useradd -g mysql mysql -d /home/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改mysql用户的登陆密码</span></span><br><span class="line">passwd mysql</span><br></pre></td></tr></table></figure><h2 id="2-2-解压缩"><a href="#2-2-解压缩" class="headerlink" title="2.2 解压缩"></a>2.2 解压缩</h2><p>在<code>/usr/local/</code>中解压压缩包，并改名为<code>mysql</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/</span><br><span class="line"></span><br><span class="line">tar -xzvf /data/software/mysql-5.7.13-linux-glibc2.5-x86_64.tar.gz (我的下载目录为 data/software)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改名为mysql</span></span><br><span class="line"><span class="built_in">mv</span> mysql-5.7.13-linux-glibc2.5-x86_64 mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 并赋予用户读写权限（此处也可以换位你的用户）</span></span><br><span class="line"><span class="built_in">chown</span> -R mysql:mysql mysql/</span><br></pre></td></tr></table></figure><h2 id="2-3-创建配置文件"><a href="#2-3-创建配置文件" class="headerlink" title="2.3 创建配置文件"></a>2.3 创建配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure><p>复制以下内容：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span></span><br><span class="line"><span class="attr">socket</span> = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">character_set_server</span>=utf8</span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">&#x27;SET NAMES utf8&#x27;</span></span><br><span class="line"><span class="attr">basedir</span>=/usr/local/mysql</span><br><span class="line"><span class="attr">datadir</span>=/usr/local/mysql/data</span><br><span class="line"><span class="attr">socket</span>=/tmp/mysql.sock</span><br><span class="line"><span class="attr">log-error</span>=/var/log/mysqld.log</span><br><span class="line"><span class="attr">pid-file</span>=/var/run/mysqld/mysqld.pid</span><br><span class="line"></span><br><span class="line"><span class="comment">#不区分大小写</span></span><br><span class="line"><span class="attr">lower_case_table_names</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">5000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">default-time_zone</span> = <span class="string">&#x27;+8:00&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="2-4-初始化文件"><a href="#2-4-初始化文件" class="headerlink" title="2.4 初始化文件"></a>2.4 初始化文件</h2><blockquote><p>1、初始化<code>log</code>文件，防止没有权限。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#手动编辑一下日志文件，什么也不用写，直接保存退出</span></span><br><span class="line"><span class="built_in">cd</span> /var/log/</span><br><span class="line"></span><br><span class="line">vim mysqld.log</span><br><span class="line">：wq</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> 777 mysqld.log</span><br><span class="line"><span class="built_in">chown</span> mysql:mysql mysqld.log</span><br></pre></td></tr></table></figure><blockquote><p>2、初始化<code>pid</code>文件，防止没有权限。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#手动编辑一下日志文件，什么也不用写，直接保存退出</span></span><br><span class="line"><span class="built_in">cd</span> /var/run/</span><br><span class="line"><span class="built_in">mkdir</span> mysqld</span><br><span class="line"><span class="built_in">cd</span> mysqld</span><br><span class="line">vi mysqld.pid</span><br><span class="line">:wq</span><br><span class="line"><span class="comment"># 给权限</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="built_in">chmod</span> 777 mysqld</span><br><span class="line"><span class="built_in">chown</span> -R mysql:mysql /mysqld</span><br></pre></td></tr></table></figure><blockquote><p>3、初始化数据库</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化数据库，并指定启动mysql的用户，否则就会在启动MySQL时出现权限不足的问题</span></span><br><span class="line">/usr/local/mysql/bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --lc_messages_dir=/usr/local/mysql/share --lc_messages=en_US</span><br></pre></td></tr></table></figure><p>初始化完成后，在<code>my.cnf</code>中配置的<code>datadir</code>目录（<code>/var/log/mysqld.log</code>）下生成一个<code>error.log</code>文件，里面记录了<code>root</code>用户的随机密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /var/log/mysqld.log</span><br></pre></td></tr></table></figure><p>执行后记录查看到文件中最后一行：<code>root@localhost: xxxxx </code> 这里的<code>xxxxx</code>就是初始密码。</p><h2 id="2-5-启动数据库"><a href="#2-5-启动数据库" class="headerlink" title="2.5 启动数据库"></a>2.5 启动数据库</h2><p>启动数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#源目录启动：</span></span><br><span class="line">/usr/local/mysql/support-files/mysql.server start</span><br></pre></td></tr></table></figure><p>并设置开机自启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制启动脚本到资源目录</span></span><br><span class="line"><span class="built_in">cp</span> /usr/local/mysql/support-files/mysql.server /etc/rc.d/init.d/mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加mysqld服务控制脚本执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /etc/rc.d/init.d/mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将mysqld服务加入到系统服务</span></span><br><span class="line">chkconfig --add mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查mysqld服务是否已经生效</span></span><br><span class="line">chkconfig --list mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换至mysql用户，启动mysql，或者稍后下一步再启动。</span></span><br><span class="line">service mysqld start </span><br></pre></td></tr></table></figure><p>从此就可以使用<code>service mysqld</code>命令启动&#x2F;停止服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su mysql</span><br><span class="line"></span><br><span class="line">service mysqld start/stop/restart/status</span><br></pre></td></tr></table></figure><h2 id="2-6-配置环境变量"><a href="#2-6-配置环境变量" class="headerlink" title="2.6 配置环境变量"></a>2.6 配置环境变量</h2><p>为了更好的操作<code>mysql</code>，配置环境变量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换至mysql用户</span></span><br><span class="line">su mysql</span><br><span class="line"></span><br><span class="line">vi .bash_profile</span><br><span class="line"><span class="comment"># 修改配置文件，增加export PATH=$PATH:/usr/local/mysql/bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 立即生效</span></span><br><span class="line"><span class="built_in">source</span> .bash_profile</span><br></pre></td></tr></table></figure><h2 id="2-7-登陆，修改密码"><a href="#2-7-登陆，修改密码" class="headerlink" title="2.7 登陆，修改密码"></a>2.7 登陆，修改密码</h2><p>必须修改初始的随机密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 系统默认会查找/usr/bin下的命令;建立一个链接文件。</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/mysql/bin/mysql /usr/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登陆mysql的root用户</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="comment"># 输入2.4生成的 随机密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改root用户密码为123456</span></span><br><span class="line"><span class="built_in">set</span> password <span class="keyword">for</span> root@localhost=password(<span class="string">&quot;123456&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="3-使用mysql"><a href="#3-使用mysql" class="headerlink" title="3 使用mysql"></a>3 使用mysql</h1><p>##3.1 用户建立<br>以下命令只需要改动用户名和密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to <span class="string">&#x27;新用户名&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;新密码&#x27;</span>;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>其中通配符%表示让该用户可以从任意远程主机登陆。</p><p>##3.2 创建数据库<br>登陆用户后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询现有的数据库：</span></span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建</span></span><br><span class="line">CREATE DATABASE 数据库名;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入数据库：</span></span><br><span class="line">use 数据库名;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有的表</span></span><br><span class="line">show tables;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出：</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h1 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h1><ul><li>《Linux CentOS 7离线安装MySQL 5.7》<a href="https://blog.csdn.net/u012052268/article/details/103923056">https://blog.csdn.net/u012052268/article/details/103923056</a></li><li>《CentOS 7离线安装MySQL 5.7》<a href="https://www.jellythink.com/archives/14">https://www.jellythink.com/archives/14</a></li><li>《linux 安装MySql 5.7.20 操作步骤【亲测】》<a href="https://segmentfault.com/a/1190000012703513">https://segmentfault.com/a/1190000012703513</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Centos7离线安装MySQL服务&quot;&gt;&lt;a href=&quot;#Centos7离线安装MySQL服务&quot; class=&quot;headerlink&quot; title=&quot;Centos7离线安装MySQL服务&quot;&gt;&lt;/a&gt;Centos7离线安装MySQL服务&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Shiro系列-常见问题处理</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/Shiro%E7%B3%BB%E5%88%97-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/Shiro%E7%B3%BB%E5%88%97-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86.html</id>
    <published>2020-01-10T13:41:20.000Z</published>
    <updated>2020-07-21T17:30:19.689Z</updated>
    
    <content type="html"><![CDATA[<h3 id="错误一"><a href="#错误一" class="headerlink" title="错误一"></a>错误一</h3><h4 id="错误描述："><a href="#错误描述：" class="headerlink" title="错误描述："></a>错误描述：</h4><blockquote><p>ERROR [authentication_cache.data] net.sf.ehcache.store.disk.DiskStorageFactory - Disk Write of weyoung failed:<br>java.io.NotSerializableException: org.apache.shiro.util.SimpleByteSource</p></blockquote><span id="more"></span><h4 id="错误原因："><a href="#错误原因：" class="headerlink" title="错误原因："></a>错误原因：</h4><ul><li>因为ehcache开启了缓存存储到物理影片上，所以需要序列化对象；</li><li>SimpleByteSource没有默认构造方法，导致反序列化的时候失败。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span> <span class="attr">name</span>=<span class="string">&quot;authentication_cache&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">eternal</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">overflowToDisk</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">diskPersistent</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h4><p>新建类：</p><p><code>ByteSourceUtils.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ByteSourceUtils</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ByteSource <span class="title function_">bytes</span><span class="params">(<span class="type">byte</span>[] bytes)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MySimpleByteSource</span>(bytes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ByteSource <span class="title function_">bytes</span><span class="params">(String arg0)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MySimpleByteSource</span>(arg0.getBytes());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建类：</p><p><code>MySimpleByteSource.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Mr.wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> shiro 使用缓存时出现：java.io.NotSerializableException: org.apache.shiro.util.SimpleByteSource</span></span><br><span class="line"><span class="comment"> * 序列化后，无法反序列化的问题</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2020/1/10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MySimpleByteSource</span> <span class="keyword">extends</span> <span class="title class_">SimpleByteSource</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">2719919888511993867L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MySimpleByteSource</span><span class="params">(<span class="type">byte</span>[] bytes)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(bytes);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;错误一&quot;&gt;&lt;a href=&quot;#错误一&quot; class=&quot;headerlink&quot; title=&quot;错误一&quot;&gt;&lt;/a&gt;错误一&lt;/h3&gt;&lt;h4 id=&quot;错误描述：&quot;&gt;&lt;a href=&quot;#错误描述：&quot; class=&quot;headerlink&quot; title=&quot;错误描述：&quot;&gt;&lt;/a&gt;错误描述：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;ERROR [authentication_cache.data] net.sf.ehcache.store.disk.DiskStorageFactory - Disk Write of weyoung failed:&lt;br&gt;java.io.NotSerializableException: org.apache.shiro.util.SimpleByteSource&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>SSM报错处理</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/SSM%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/SSM%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86.html</id>
    <published>2020-01-05T16:01:53.000Z</published>
    <updated>2020-07-21T17:30:19.688Z</updated>
    
    <content type="html"><![CDATA[<h3 id="错误描述一"><a href="#错误描述一" class="headerlink" title="错误描述一"></a>错误描述一</h3><blockquote><p>org.apache.coyote.http11.Http11Processor.service Error parsing HTTP request header<br> Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.<br> java.lang.IllegalArgumentException: Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986<br>    at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:476)<br>    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:687)<br>    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)<br>    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)<br>    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)<br>    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)<br>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)<br>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)<br>    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)<br>    at java.lang.Thread.run(Thread.java:748)</p></blockquote><span id="more"></span><p>问题原因：</p><p>加载图片时，<code><img src=""></code> 中的路径中有特殊字符。</p><p>解决方式：</p><ul><li>去除URL中的特殊字符；</li><li>使用 Post 方法提交数据</li><li>更换低版本的Tomcat来规避这种问题。本文使用8.5.27版本的tomcat出现此问题；之前有类似的错误，8.5.6版本未出现过此类问题；</li><li>在 Tomcat conf&#x2F;catalina.properties  添加或者修改：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加 </span></span><br><span class="line">tomcat.util.http.parser.HttpParser.requestTargetAllow=|&#123;&#125; </span><br><span class="line"><span class="comment"># 【实测】添加了上述文件后，仍然会有400错误，在加上 encodeURIComponent方法对url进行编码之后，就可以了，希望对您有用；</span></span><br><span class="line"><span class="comment"># 【实测】使用8.5.6版本的Tomcat，该问题得到解决；</span></span><br></pre></td></tr></table></figure><p>Tomcat在 7.0.73, 8.0.39, 8.5.7 版本后，添加了对于http头的验证。具体来说，就是添加了些规则去限制HTTP头的规范性org.apache.tomcat.util.http.parser.HttpParser#IS_NOT_REQUEST_TARGET[]中定义了一堆not request targetif(IS_CONTROL[i] || i > 127 || i == 32 || i == 34 || i == 35 || i == 60 || i == 62 || i == 92 || i == 94 || i == 96 || i == 123 || i == 124 || i == 125) {IS_NOT_REQUEST_TARGET[i] = true;}转换过来就是以下字符(对应10进制ASCII看):键盘上那些控制键:(<32或者=127)非英文字符(>127)空格(32)双引号(34)#(35)<(60)>(62)反斜杠(92)^(94)TAB上面那个键,我也不晓得嫩个读(96){(123)}(124)|(125)</p><h3 id="错误描述二"><a href="#错误描述二" class="headerlink" title="错误描述二"></a>错误描述二</h3><blockquote><p>javax.management.InstanceNotFoundException: com.alibaba.druid:type&#x3D;DruidDataSourceStat</p></blockquote><p>原因：在一台服务器上启动了两个tomcat，两个tomcat都是用druid。</p><p>解决方案：</p><p>修改Tomcat 下的 catalina.sh:<br>修改Tomcat 下bin目录下的的 catalina.sh，:在# OS specific support.  $var <em>must</em> be set to either true or false.与cygwin&#x3D;false之间<br>增加此句代码： JAVA_OPTS&#x3D;”-Ddruid.registerToSysProperty&#x3D;true”</p><h3 id="错误描述三"><a href="#错误描述三" class="headerlink" title="错误描述三"></a>错误描述三</h3><p>tomcat下启动多个应用时可能遇到的异常：</p><blockquote><p>11-Jan-2020 17:38:17.244 信息 [mysql-cj-abandoned-connection-cleanup] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.<br> java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load []. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.<br>    at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1311)<br>    at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:986)<br>    at com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.checkThreadContextClassLoader(AbandonedConnectionCleanupThread.java:117)<br>    at com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:84)<br>    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)<br>    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)<br>    at java.lang.Thread.run(Thread.java:748)</p></blockquote><p>原因：从日志文件可以看出是说Web应用程序根系统属性已经被设置，’webapp.root’ 这个配置名称已经被使用，提示了Choose unique values for the ‘webAppRootKey’ context-param in your web.xml files ，也就是说在web.xml里配置一个唯一的’webAppRootKey’ ，这样就不会发生冲突。</p><p>解决办法<br>在web.xml指定webAppRootKey</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>webAppRootKey<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>myapp.root<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span>  </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;错误描述一&quot;&gt;&lt;a href=&quot;#错误描述一&quot; class=&quot;headerlink&quot; title=&quot;错误描述一&quot;&gt;&lt;/a&gt;错误描述一&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;org.apache.coyote.http11.Http11Processor.service Error parsing HTTP request header&lt;br&gt; Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.&lt;br&gt; java.lang.IllegalArgumentException: Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986&lt;br&gt;    at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:476)&lt;br&gt;    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:687)&lt;br&gt;    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)&lt;br&gt;    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)&lt;br&gt;    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)&lt;br&gt;    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)&lt;br&gt;    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)&lt;br&gt;    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)&lt;br&gt;    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)&lt;br&gt;    at java.lang.Thread.run(Thread.java:748)&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>SSM框架-整合笔记11-配置Redis</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B011-%E9%85%8D%E7%BD%AERedis.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B011-%E9%85%8D%E7%BD%AERedis.html</id>
    <published>2019-12-16T14:03:26.000Z</published>
    <updated>2020-07-21T17:30:19.689Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置redis报错"><a href="#配置redis报错" class="headerlink" title="配置redis报错"></a>配置redis报错</h2><blockquote><p>org.springframework.expression.spel.SpelEvaluationException: EL1008E:(pos 0): Property or field ‘redis_allMenuTree’ cannot be found on object of type ‘org.springframework.cache.interceptor.CacheExpressionRootObject’ - maybe not public?</p></blockquote><h3 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h3><p>&#x2F;&#x2F; @Cacheable 上面的错误是因为：注解中key的值变量之前没有加#（井号）</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Cacheable(value = CACHE_REDIS_PREFIX + &quot;menus&quot;, key = &quot;#sysUser.userId&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;BaseMenuVo&gt; <span class="title function_">queryMenuTree</span><span class="params">(SysUserVo sysUser)</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;配置redis报错&quot;&gt;&lt;a href=&quot;#配置redis报错&quot; class=&quot;headerlink&quot; title=&quot;配置redis报错&quot;&gt;&lt;/a&gt;配置redis报错&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;org.springframework.expressio</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SSM框架-整合笔记10-配置工作流Activiti</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B010-%E9%85%8D%E7%BD%AE%E5%B7%A5%E4%BD%9C%E6%B5%81Activiti.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/SSM%E6%A1%86%E6%9E%B6-%E6%95%B4%E5%90%88%E7%AC%94%E8%AE%B010-%E9%85%8D%E7%BD%AE%E5%B7%A5%E4%BD%9C%E6%B5%81Activiti.html</id>
    <published>2019-12-15T17:04:59.000Z</published>
    <updated>2020-07-21T17:30:19.688Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置工作流Activiti"><a href="#配置工作流Activiti" class="headerlink" title="配置工作流Activiti"></a>配置工作流Activiti</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activiti.version</span>&gt;</span>5.17.0<span class="tag">&lt;/<span class="name">activiti.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.activiti<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activiti-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;activiti.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.activiti<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activiti-bpmn-model<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;activiti.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.activiti<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activiti-rest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;activiti.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.activiti<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activiti-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;activiti.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><blockquote><p>execute error. select * from ACT_GE_PROPERTY where NAME_ &#x3D; ?<br>java.sql.SQLSyntaxErrorException: Table ‘lx_parent.act_ge_property’ doesn’t exist</p></blockquote><p>问题出现的原因：<br>出现这种问题的原因是mysql版本问题，mysql8.xxx以上驱动会出现这个问题。<br>因为mysql使用schema标识库名而不是catalog，因此mysql会扫描所有的库来找表，如果其他库中有相同名称的表，activiti就以为找到了，本质上这个表在当前数据库中并不存在。<br>设置nullCatalogMeansCurrent&#x3D;true，表示mysql默认当前数据库操作，在mysql-connector-java 5.xxx该参数默认为true，在6.xxx以上默认为false，因此需要设置nullCatalogMeansCurrent&#x3D;true。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;配置工作流Activiti&quot;&gt;&lt;a href=&quot;#配置工作流Activiti&quot; class=&quot;headerlink&quot; title=&quot;配置工作流Activiti&quot;&gt;&lt;/a&gt;配置工作流Activiti&lt;/h2&gt;&lt;h3 id=&quot;添加依赖&quot;&gt;&lt;a href=&quot;#添加依赖&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Nginx反向代理和负载均衡使用</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%92%8C%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%BD%BF%E7%94%A8.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%92%8C%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%BD%BF%E7%94%A8.html</id>
    <published>2019-12-13T15:19:09.000Z</published>
    <updated>2020-07-21T17:30:19.692Z</updated>
    
    <content type="html"><![CDATA[<h2 id="业务场景"><a href="#业务场景" class="headerlink" title="业务场景"></a>业务场景</h2><p>部署两个tomcat，一个端口8080、另一个端口8081，使用nginx作为反向代理服务器。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>直接访问具体端口进行访问并登录，程序能够正常使用。但是通过nginx访问程序时，登录是状态为302（Moved Temporarily）。</p><p>问题即：nginx代理多次导致302问题</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;业务场景&quot;&gt;&lt;a href=&quot;#业务场景&quot; class=&quot;headerlink&quot; title=&quot;业务场景&quot;&gt;&lt;/a&gt;业务场景&lt;/h2&gt;&lt;p&gt;部署两个tomcat，一个端口8080、另一个端口8081，使用nginx作为反向代理服务器。&lt;/p&gt;
&lt;h2 id=&quot;问题</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux使用4—CentOS7安装Docker及基本使用</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A84%E2%80%94CentOS7%E5%AE%89%E8%A3%85Docker%E5%8F%8A%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A84%E2%80%94CentOS7%E5%AE%89%E8%A3%85Docker%E5%8F%8A%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8.html</id>
    <published>2019-12-12T01:51:56.000Z</published>
    <updated>2020-07-21T17:30:19.692Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CentOS-7-安装-docker"><a href="#CentOS-7-安装-docker" class="headerlink" title="CentOS 7 安装 docker"></a>CentOS 7 安装 docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装gcc</span></span><br><span class="line">yum -y install gcc</span><br><span class="line"><span class="comment"># 安装gcc-c++</span></span><br><span class="line">yum -y install gcc-c++</span><br><span class="line"><span class="comment"># 验证gcc是否安装成功</span></span><br><span class="line">gcc -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装需要的软件包</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置stable镜像仓库</span></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新yum软件包索引</span></span><br><span class="line">yum makecache fast</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装DOCKER CE</span></span><br><span class="line">yum -y install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment">### （可选）如果要安装指定版本，查看repo的可用版本</span></span><br><span class="line">yum list docker-ce --showduplicates | <span class="built_in">sort</span> -r</span><br><span class="line"></span><br><span class="line"><span class="comment">### （可选）安装指定版本</span></span><br><span class="line">yum install docker-ce-&lt;VERSION STRING&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看docker版本</span></span><br><span class="line">docker version</span><br></pre></td></tr></table></figure><h3 id="CentOS-7-安装-docker-compose"><a href="#CentOS-7-安装-docker-compose" class="headerlink" title="CentOS 7 安装 docker-compose"></a>CentOS 7 安装 docker-compose</h3><h4 id="curl方式"><a href="#curl方式" class="headerlink" title="curl方式"></a>curl方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(<span class="built_in">uname</span> -s)-$(<span class="built_in">uname</span> -m) -o /usr/local/bin/docker-compose</span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本信息</span></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;CentOS-7-安装-docker&quot;&gt;&lt;a href=&quot;#CentOS-7-安装-docker&quot; class=&quot;headerlink&quot; title=&quot;CentOS 7 安装 docker&quot;&gt;&lt;/a&gt;CentOS 7 安装 docker&lt;/h3&gt;&lt;figure c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux使用3—CentOS7安装MongoDB数据库</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A83%E2%80%94CentOS7%E5%AE%89%E8%A3%85MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A83%E2%80%94CentOS7%E5%AE%89%E8%A3%85MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93.html</id>
    <published>2019-12-12T01:50:42.000Z</published>
    <updated>2020-07-21T17:30:19.692Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数据库版本"><a href="#数据库版本" class="headerlink" title="数据库版本"></a>数据库版本</h3><p>MongoDB shell version v4.0.13</p><span id="more"></span><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>创建文件：&#x2F;etc&#x2F;yum.repos.d&#x2F;mongodb-org-4.0.repo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建yum源 </span></span><br><span class="line">/etc/yum.repos.d/mongodb-org-4.0.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容</span></span><br><span class="line">[mongodb-org-4.0]</span><br><span class="line">name=MongoDB Repository</span><br><span class="line">baseurl=https://repo.mongodb.org/yum/redhat/<span class="variable">$releasever</span>/mongodb-org/4.0/x86_64/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mongodb-org</span><br></pre></td></tr></table></figure><ul><li>默认数据位置<ul><li>&#x2F;var&#x2F;lib&#x2F;mongo</li></ul></li><li>默认日志位置<ul><li>&#x2F;var&#x2F;log&#x2F;mongodb</li></ul></li><li>数据库配置<ul><li>&#x2F;etc&#x2F;mongod.conf</li></ul></li></ul><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><h4 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h4><p>开启远程连接：<br>将net:<br>    bindIp: 127.0.0.1 的127.0.0.1改为 0.0.0.0</p><h4 id="进入命令行"><a href="#进入命令行" class="headerlink" title="进入命令行"></a>进入命令行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></table></figure><h4 id="设置账号密码"><a href="#设置账号密码" class="headerlink" title="设置账号密码"></a>设置账号密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换数据库</span></span><br><span class="line"> use admin</span><br><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line">db.createUser(&#123; user: <span class="string">&quot;root&quot;</span>, <span class="built_in">pwd</span>: <span class="string">&quot;root&quot;</span>, roles: [&#123; role: <span class="string">&quot;userAdminAnyDatabase&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125;] &#125;)</span><br><span class="line"><span class="comment"># 修改mongod.conf文件, 增加配置</span></span><br><span class="line">security:</span><br><span class="line">  authorization: enabled</span><br><span class="line"><span class="comment"># 重启服务</span></span><br></pre></td></tr></table></figure><h4 id="服务命令行"><a href="#服务命令行" class="headerlink" title="服务命令行"></a>服务命令行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭服务</span></span><br><span class="line">service mongod stop</span><br><span class="line"><span class="comment"># 关闭服务1</span></span><br><span class="line">systemctl stop mongod</span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">service mongod restart </span><br><span class="line"><span class="comment"># 重启服务1</span></span><br><span class="line">systemctl restart mongod</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">service mongod start</span><br><span class="line"><span class="comment"># 启动服务1</span></span><br><span class="line">systemctl start mongod</span><br></pre></td></tr></table></figure><h4 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chkconfig mongod on</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">systemctl ennable mongod</span><br></pre></td></tr></table></figure><h3 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h3><h4 id="错误一"><a href="#错误一" class="headerlink" title="错误一"></a>错误一</h4><blockquote><p>Error: couldn’t connect to server 127.0.0.1:27017, connection attempt failed: SocketException: Error connecting to 127.0.0.1:27017 :: caused by :: Connection refused :<br>connect@src&#x2F;mongo&#x2F;shell&#x2F;mongo.js:344:17</p></blockquote><p>解决步骤：</p><p>使用mongod命令时可以看到如下错误：</p><blockquote><p>exception in initAndListen: NonExistentPath: Data directory &#x2F;data&#x2F;db not found., terminating</p></blockquote><p>因此，手动创建该文件夹。</p><p>发现可以正常启动了。</p><h4 id="错误二"><a href="#错误二" class="headerlink" title="错误二"></a>错误二</h4><blockquote><p>Error: couldn’t add user: command createUser requires authentication:_getErrorWithCode@src&#x2F;mongo&#x2F;shell&#x2F;utils.js:25:13<br>DB.prototype.createUser@src&#x2F;mongo&#x2F;shell&#x2F;db.js:1491:15</p></blockquote><p>解决方案：先使用超级管理员登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">db.auth(<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;root&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后，再切换数据库并创建其他用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.createUser(&#123; user: <span class="string">&quot;root&quot;</span>, <span class="built_in">pwd</span>: <span class="string">&quot;root&quot;</span>, roles: [&#123; role: <span class="string">&quot;dbOwner&quot;</span>, db: <span class="string">&quot;weyoung&quot;</span> &#125;] &#125;)</span><br></pre></td></tr></table></figure><h3 id="MongoDB数据库常用命令"><a href="#MongoDB数据库常用命令" class="headerlink" title="MongoDB数据库常用命令"></a>MongoDB数据库常用命令</h3><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use DATABASE_NAME</span><br><span class="line"><span class="comment"># 例如：</span></span><br><span class="line">use weyoung</span><br></pre></td></tr></table></figure><h4 id="创建集合"><a href="#创建集合" class="headerlink" title="创建集合"></a>创建集合</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(name, options)</span><br><span class="line"><span class="comment"># name: 要创建的集合名称</span></span><br><span class="line"><span class="comment"># options: 可选参数, 指定有关内存大小及索引的选项</span></span><br></pre></td></tr></table></figure><h4 id="删除集合"><a href="#删除集合" class="headerlink" title="删除集合"></a>删除集合</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看数据库中所有集合</span></span><br><span class="line">show collections</span><br><span class="line"></span><br><span class="line">db.collection.drop()</span><br></pre></td></tr></table></figure><h4 id="删除文档"><a href="#删除文档" class="headerlink" title="删除文档"></a>删除文档</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db.collection.remove(</span><br><span class="line">   &lt;query&gt;,</span><br><span class="line">   &#123;</span><br><span class="line">     justOne: &lt;boolean&gt;,</span><br><span class="line">     writeConcern: &lt;document&gt;</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br><span class="line"><span class="comment"># query :（可选）删除的文档的条件。</span></span><br><span class="line"><span class="comment"># justOne : （可选）如果设为 true 或 1，则只删除一个文档，如果不设置该参数，或使用默认值 false，则删除所有匹配条件的文档。</span></span><br><span class="line"><span class="comment"># writeConcern :（可选）抛出异常的级别。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;数据库版本&quot;&gt;&lt;a href=&quot;#数据库版本&quot; class=&quot;headerlink&quot; title=&quot;数据库版本&quot;&gt;&lt;/a&gt;数据库版本&lt;/h3&gt;&lt;p&gt;MongoDB shell version v4.0.13&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux使用2—Centos7安装redis服务</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A82%E2%80%94CentOS7%E5%AE%89%E8%A3%85redis%E6%9C%8D%E5%8A%A1.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/Linux%E4%BD%BF%E7%94%A82%E2%80%94CentOS7%E5%AE%89%E8%A3%85redis%E6%9C%8D%E5%8A%A1.html</id>
    <published>2019-12-12T01:46:35.000Z</published>
    <updated>2021-02-27T04:13:09.983Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Centos7安装redis服务"><a href="#Centos7安装redis服务" class="headerlink" title="Centos7安装redis服务"></a>Centos7安装redis服务</h2><span id="more"></span><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget http://download.redis.io/releases/redis-5.0.5.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar xzf redis-5.0.5.tar.gz</span><br><span class="line"><span class="comment"># 打开</span></span><br><span class="line"><span class="built_in">cd</span> redis-5.0.5</span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>上述步骤完成后，会在<code>redis-5.0.5</code>目录下生成<code>src</code>目录，<br>里面包含<code>redis-server</code>等文件；</p><p>进入src目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> src/</span><br><span class="line"><span class="comment"># 执行</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>在<code>redis-5.0.5</code>目录下创建<code>etc</code>目录存放配置文件、<code>bin</code>目录统一存放命令，<br>然后将<code>src</code>目录下的以下文件移动到<code>bin</code>目录中；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> mkreleasehdr.sh redis-benchmark redis-check-aof redis-check-rdb redis-cli redis-server ../bin/</span><br></pre></td></tr></table></figure><p>将<code>redis-5.0.5</code>目录下<code>redis.conf</code>文件移动到刚刚创建的<code>redis-5.0.5</code>目录下。</p><h1 id="进行一些配置"><a href="#进行一些配置" class="headerlink" title="进行一些配置"></a>进行一些配置</h1><h2 id="允许所有IP访问"><a href="#允许所有IP访问" class="headerlink" title="允许所有IP访问"></a>允许所有IP访问</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> redis-5.0.5/etc</span><br><span class="line">vim redis.conf</span><br></pre></td></tr></table></figure><p>注释掉 <code>bin 127.0.0.1</code>，将<code>protected-mode yes</code>修改为<code>protected-mode no</code>；</p><h2 id="以守护进程方式运行"><a href="#以守护进程方式运行" class="headerlink" title="以守护进程方式运行"></a>以守护进程方式运行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将 daemonize no修改为</span></span><br><span class="line">daemonize <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><h2 id="设置service服务启动"><a href="#设置service服务启动" class="headerlink" title="设置service服务启动"></a>设置service服务启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">cd redis-5.0.5/utils/</span><br><span class="line"></span><br><span class="line">cp redis_init_script /etc/init.d/redis</span><br><span class="line"></span><br><span class="line"># 修改文件</span><br><span class="line">vim /etc/init.d/redis</span><br><span class="line"></span><br><span class="line">#在/etc/init.d/redis文件的头部添加下面两行注释代码,也就是在文件中#!/bin/sh的下方添加</span><br><span class="line"># chkconfig: 2345 10 90  </span><br><span class="line"># description: Start and Stop redis </span><br><span class="line"></span><br><span class="line"># 同时还要修改参数,指定redis的安装路径，以下为示例，你按照自己的实际路径配置</span><br><span class="line">EXEC=/usr/local/bin/redis-server</span><br><span class="line">CLIEXEC=/usr/local/bin/redis-cli</span><br><span class="line"># 我自己修改了配置文件路径。如下</span><br><span class="line">#CONF=&quot;/etc/redis/$&#123;REDISPORT&#125;.conf&quot;</span><br><span class="line">CONF=&quot;/usr/local/install/redis-5.0.5/etc/redis.conf&quot;</span><br></pre></td></tr></table></figure><h1 id="启动redis"><a href="#启动redis" class="headerlink" title="启动redis"></a>启动redis</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#打开redis命令:</span><br><span class="line">service redis start</span><br><span class="line">#关闭redis命令:</span><br><span class="line">service redis stop</span><br><span class="line">#设为开机启动:</span><br><span class="line">chkconfig redis on</span><br><span class="line">#设为开机关闭:</span><br><span class="line">chkconfig redis off</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.cnblogs.com/moying-wq/p/10957501.html">https://www.cnblogs.com/moying-wq/p/10957501.html</a></li></ul><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="修改密码不生效问题"><a href="#修改密码不生效问题" class="headerlink" title="修改密码不生效问题"></a>修改密码不生效问题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">whereis redis-cli</span><br><span class="line"></span><br><span class="line">/usr/bin/redis-cli</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录</span></span><br><span class="line">auth <span class="string">&quot;原密码!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新密码</span></span><br><span class="line">config <span class="built_in">set</span> requirepass 新密码</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出</span></span><br><span class="line">quit</span><br></pre></td></tr></table></figure><h2 id="redis-设置超时时间"><a href="#redis-设置超时时间" class="headerlink" title="redis 设置超时时间"></a>redis 设置超时时间</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Centos7安装redis服务&quot;&gt;&lt;a href=&quot;#Centos7安装redis服务&quot; class=&quot;headerlink&quot; title=&quot;Centos7安装redis服务&quot;&gt;&lt;/a&gt;Centos7安装redis服务&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Jrebel激活破解方式（正在使用）</title>
    <link href="https://lixiaw.github.io/2024_bf/%E5%B7%A5%E5%85%B7/Jrebel%E6%BF%80%E6%B4%BB%E7%A0%B4%E8%A7%A3%E6%96%B9%E5%BC%8F%EF%BC%88%E6%AD%A3%E5%9C%A8%E4%BD%BF%E7%94%A8%EF%BC%89.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E5%B7%A5%E5%85%B7/Jrebel%E6%BF%80%E6%B4%BB%E7%A0%B4%E8%A7%A3%E6%96%B9%E5%BC%8F%EF%BC%88%E6%AD%A3%E5%9C%A8%E4%BD%BF%E7%94%A8%EF%BC%89.html</id>
    <published>2019-12-10T01:57:07.000Z</published>
    <updated>2020-07-21T17:30:19.693Z</updated>
    
    <content type="html"><![CDATA[<h2 id="激活服务器"><a href="#激活服务器" class="headerlink" title="激活服务器"></a>激活服务器</h2><p>2019年12月09日21:10:07</p><p>由于个人经常使用，因此在自己的服务器上部署了一个Jrebel激活服务，如果有需要的小伙伴可以使用：</p><span id="more"></span><h2 id="http-49-234-33-108-314-这里面加上一个UUID"><a href="#http-49-234-33-108-314-这里面加上一个UUID" class="headerlink" title="http://49.234.33.108:314/这里面加上一个UUID"></a><a href="http://49.234.33.108:314/%E8%BF%99%E9%87%8C%E9%9D%A2%E5%8A%A0%E4%B8%8A%E4%B8%80%E4%B8%AAUUID">http://49.234.33.108:314/这里面加上一个UUID</a></h2><p>例如：（<a href="http://49.234.33.108:314/88414687-3b91-4286-89ba-2dc813b107cd%EF%BC%89">http://49.234.33.108:314/88414687-3b91-4286-89ba-2dc813b107cd）</a></p><p>点击获取UUID：</p><ul><li><a href="https://1024tools.com/uuid">UUID在线生成一</a></li><li><a href="http://www.kjson.com/encrypt/uuid/">UUID在线生成二</a></li></ul><p>使用方式：</p><h2 id="Hello，此地址是-Jrebel-JetBrains-License-Server"><a href="#Hello，此地址是-Jrebel-JetBrains-License-Server" class="headerlink" title="Hello，此地址是 Jrebel &amp; JetBrains License Server!"></a>Hello，此地址是 Jrebel &amp; JetBrains License Server!</h2><ul><li><p>JetBrains许可服务器激活地址 <a href="http://49.234.33.108:314/">http://49.234.33.108:314</a></p></li><li><p>JetBrains激活地址是: <a href="http://49.234.33.108:314/">http://49.234.33.108:314/</a></p></li><li><p>JRebel 7.1 及旧版本激活地址: <a href="http://49.234.33.108:314/%7Btokenname%7D">http://49.234.33.108:314/{tokenname}</a>, 以及任意邮箱地址。</p></li><li><p>JRebel 2018.1+ 版本激活地址: <a href="http://49.234.33.108:314/%7Bguid%7D(%E4%BE%8B%E5%A6%82%EF%BC%9Ahttp://49.234.33.108:314/1777fb3b-2805-43b6-8313-c35e4ae70d18)">http://49.234.33.108:314/{guid}(例如：http://49.234.33.108:314/1777fb3b-2805-43b6-8313-c35e4ae70d18)</a>, 以及任意邮箱地址。</p></li></ul>]]></content>
    
    
    <summary type="html">Jrebel激活</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>CentOS7搭建Jenkins</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/CentOS7%E6%90%AD%E5%BB%BAJenkins.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/CentOS7%E6%90%AD%E5%BB%BAJenkins.html</id>
    <published>2019-11-13T12:03:30.000Z</published>
    <updated>2021-03-31T15:09:16.094Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CentOS7下yum安装Jenkins"><a href="#CentOS7下yum安装Jenkins" class="headerlink" title="CentOS7下yum安装Jenkins"></a>CentOS7下yum安装Jenkins</h2><span id="more"></span><blockquote><p>在线下载太慢，估摸着得一个多小时，因此采用本文的方式？</p></blockquote><h2 id="清华大学镜像源："><a href="#清华大学镜像源：" class="headerlink" title="清华大学镜像源："></a>清华大学镜像源：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/jenkins/</span><br></pre></td></tr></table></figure><p>使用<code>redhat-stable/</code>中的一个版本即可</p><h2 id="上传rpm安装包并安装"><a href="#上传rpm安装包并安装" class="headerlink" title="上传rpm安装包并安装"></a>上传rpm安装包并安装</h2><p>使用rpm命令安装rpm安装包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh jenkins-2.190.2-1.1.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看jenkins目录</span></span><br><span class="line">whereis jenkins</span><br><span class="line"><span class="comment"># 以下是安装目录</span></span><br><span class="line">jenkins: /usr/lib/jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment">## WAR包</span></span><br><span class="line">/usr/lib/jenkins/jenkins.war </span><br><span class="line"><span class="comment">## 配置文件</span></span><br><span class="line">/etc/sysconfig/jenkins</span><br><span class="line"><span class="comment">## 默认的JENKINS_HOME目录</span></span><br><span class="line">/var/lib/jenkins/</span><br><span class="line"><span class="comment">## Jenkins日志文件</span></span><br><span class="line">/var/log/jenkins/jenkins.log</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="1-启动命令"><a href="#1-启动命令" class="headerlink" title="1.启动命令"></a>1.启动命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> service jenkins start</span><br></pre></td></tr></table></figure><h3 id="2-更改默认端口"><a href="#2-更改默认端口" class="headerlink" title="2.更改默认端口"></a>2.更改默认端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将端口修改为8888</span></span><br><span class="line">JENKINS_PORT=<span class="string">&quot;8888&quot;</span></span><br></pre></td></tr></table></figure><h3 id="访问url；8888端口"><a href="#访问url；8888端口" class="headerlink" title="访问url；8888端口"></a>访问url；8888端口</h3><p>在<code>/var/lib/jenkins/secrets/initialAdminPassword</code>文件中复制密码并粘贴，点击继续。</p><p><img src="http://img.wanglixia.top/jenkins_01-2019111322373.png" alt="jenkins_01-2019111322373"></p><h2 id="搭建自动化部署环境"><a href="#搭建自动化部署环境" class="headerlink" title="搭建自动化部署环境"></a>搭建自动化部署环境</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><ul><li>Deploy to container</li><li>GIT</li></ul><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker</span><br><span class="line"></span><br><span class="line">wget https://github.com/git/git/archive/v2.3.0.zip</span><br></pre></td></tr></table></figure><h2 id="全局工具配置"><a href="#全局工具配置" class="headerlink" title="全局工具配置"></a>全局工具配置</h2><h3 id="1、JDK"><a href="#1、JDK" class="headerlink" title="1、JDK"></a>1、JDK</h3><p>不自动安装，<code>JAVA_HOME</code>示例：<code>/usr/local/install/java/jdk1.8.0_14/</code></p><h3 id="2、Git"><a href="#2、Git" class="headerlink" title="2、Git"></a>2、Git</h3><p><code>Path to Git executable</code>示例：<code>/usr/bin/git</code></p><h3 id="3、Maven"><a href="#3、Maven" class="headerlink" title="3、Maven"></a>3、Maven</h3><p><code>MAVEN_HOME</code>示例：<code>/usr/share/maven</code></p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><h4 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h4><p>如果访问url:8888端口，卡在Please wait while Jenkins is getting ready to work …页面，稍等5~6分钟即可。</p><h4 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h4><p>修改升级的站点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">http://mirror.esuni.jp/jenkins/updates/update-center.json</span><br></pre></td></tr></table></figure><h4 id="问题三"><a href="#问题三" class="headerlink" title="问题三"></a>问题三</h4><blockquote><p>无法获取”&#x2F;opt&#x2F;apache-tomcat-8.5.23&#x2F;webapps&#x2F;lx-platform&#x2F;“ 的文件状态(stat): 权限不够<br>Build step ‘Execute shell’ marked build as failure</p></blockquote><p>解决办法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/jenkins</span><br><span class="line"><span class="comment"># 找到JENKINS_USER发现默认用户jenkins，修改为root</span></span><br></pre></td></tr></table></figure><p>修改默认用户权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R root:root /var/lib/jenkins</span><br><span class="line"><span class="built_in">chown</span> -R root:root /var/cache/jenkins/</span><br><span class="line"><span class="built_in">chown</span> -R root:root /var/log/jenkins</span><br></pre></td></tr></table></figure><p>重启jenkins服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">systemctl restart jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还可以给jenkins用户添加相应的权限</span></span><br><span class="line"><span class="built_in">chown</span> -R jenkins &lt;path&gt;</span><br></pre></td></tr></table></figure><h3 id="问题四：插件源改为国内"><a href="#问题四：插件源改为国内" class="headerlink" title="问题四：插件源改为国内"></a>问题四：插件源改为国内</h3><p>下面标注的配置文件地址，都是默认的地址</p><p>修改插件更新中心地址，加快查找插件<br>插件更新配置文件：<code>/var/lib/jenkins/hudson.model.UpdateCenter.xml</code>，<br>修改<code>url</code>为<code>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</code>，这个是清华大学的镜像，也可以修改为其他的国内镜像</p><p>修改默认插件下载地址，解决插件下载慢的问题<br>插件下载地址配置文件：<code>/var/lib/jenkins/updates/default.json</code>，这个文件一开始不存在，得先做第一步（修改插件更新中心地址），然后启动服务，访问一次服务后，这个文件就会有了<br>修改方式是将默认插件下载地址都改成国内的<br>使用下面的命令可直接修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i &#x27;s#updates.jenkins.io/download/plugins#mirrors.tuna.tsinghua.edu.cn/jenkins/plugins#g&#x27; default.json &amp;&amp; sudo sed -i &#x27;s#www.google.com#www.baidu.com#g&#x27; default.json</span><br></pre></td></tr></table></figure><h3 id="问题五：原有jenkins项目插件迁移"><a href="#问题五：原有jenkins项目插件迁移" class="headerlink" title="问题五：原有jenkins项目插件迁移"></a>问题五：原有jenkins项目插件迁移</h3><p>一般jenkins的插件在<code>/var/lib/jenkins/plugins</code>这个位置，拷贝到目标机器的这个位置，然后重启<code>jenkins</code>服务即可。<br>拷贝项目：<code>/var/lib/jenkins/workspace</code>，重启服务。</p><h3 id="问题六：Jenkins出现一个错误-无法连接到Jenkins如何解决"><a href="#问题六：Jenkins出现一个错误-无法连接到Jenkins如何解决" class="headerlink" title="问题六：Jenkins出现一个错误 无法连接到Jenkins如何解决"></a>问题六：Jenkins出现一个错误 无法连接到Jenkins如何解决</h3><p>1、 关闭jenkins</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service jenkins stop</span><br></pre></td></tr></table></figure><p>2、修改config.xml（最好在修改之前备份一下这个文件，以防止以后万一还需要这个版本）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /var/lib/jenkins/config.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改第10行 &lt;useSecurity&gt;true&lt;/useSecurity&gt; 修改为:&lt;useSecurity&gt;false&lt;/useSecurity&gt;</span></span><br><span class="line"><span class="comment">#删除第11-17行 &lt;authorizationStrategy …/&gt;和&lt;securityRealm …&gt;到&lt;/securityRealm&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  &lt;!--例如删除以下内容：--&gt;</span><br><span class="line">&lt;authorizationStrategy class=&quot;hudson.security.ProjectMatrixAuthorizationStrategy&quot;/&gt;</span><br><span class="line">&lt;securityRealm class=&quot;hudson.security.HudsonPrivateSecurityRealm&quot;&gt;</span><br><span class="line">  &lt;disableSignup&gt;true&lt;/disableSignup&gt;</span><br><span class="line">  &lt;enableCaptcha&gt;false&lt;/enableCaptcha&gt;</span><br><span class="line">&lt;/securityRealm&gt;</span><br></pre></td></tr></table></figure><p>3、 启动jenkins</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service jenkins start</span><br></pre></td></tr></table></figure><h3 id="问题七：不安全的Jenkins允许网络上的任何人以你的身份访问程序。考虑至少启用身份验证来阻止滥用。"><a href="#问题七：不安全的Jenkins允许网络上的任何人以你的身份访问程序。考虑至少启用身份验证来阻止滥用。" class="headerlink" title="问题七：不安全的Jenkins允许网络上的任何人以你的身份访问程序。考虑至少启用身份验证来阻止滥用。"></a>问题七：不安全的Jenkins允许网络上的任何人以你的身份访问程序。考虑至少启用身份验证来阻止滥用。</h3><p>参考资料：<a href="https://blog.csdn.net/wangmuming/article/details/22926025">https://blog.csdn.net/wangmuming/article/details/22926025</a></p><h3 id="问题八：安装插件-java-nio-file-AccessDeniedException-var-lib-jenkins-plugins-workflow-step-api-jpi-tmp"><a href="#问题八：安装插件-java-nio-file-AccessDeniedException-var-lib-jenkins-plugins-workflow-step-api-jpi-tmp" class="headerlink" title="问题八：安装插件 java.nio.file.AccessDeniedException: &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;plugins&#x2F;workflow-step-api.jpi.tmp"></a>问题八：安装插件 java.nio.file.AccessDeniedException: &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;plugins&#x2F;workflow-step-api.jpi.tmp</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>chmod 777 &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;plugins</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">然后重启，再去下载插件，问题不再存在。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 问题八：jenkins 使用maven编译java项目报错：</span><br><span class="line">&gt;ERROR: Failed to parse POMs</span><br><span class="line"> java.io.IOException: Cannot run program &quot;/usr/local/install/java/jdk1.8.0_141/bin/java&quot; (in directory &quot;/var/lib/jenkins/workspace/weyoung-pay&quot;): error=13, Permission denied</span><br><span class="line"> at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)</span><br><span class="line"> at hudson.Proc$LocalProc.&lt;init&gt;(Proc.java:250)</span><br><span class="line"> at hudson.Proc$LocalProc.&lt;init&gt;(Proc.java:219)</span><br><span class="line"> at hudson.Launcher$LocalLauncher.launch(Launcher.java:937)</span><br><span class="line"> at hudson.Launcher$ProcStarter.start(Launcher.java:455)</span><br><span class="line"> at hudson.maven.AbstractMavenProcessFactory.newProcess(AbstractMavenProcessFactory.java:280)</span><br><span class="line"> at hudson.maven.ProcessCache.get(ProcessCache.java:236)</span><br><span class="line"> at hudson.maven.MavenModuleSetBuild$MavenModuleSetBuildExecution.doRun(MavenModuleSetBuild.java:804)</span><br><span class="line"> at hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:504)</span><br><span class="line"> at hudson.model.Run.execute(Run.java:1853)</span><br><span class="line"> at hudson.maven.MavenModuleSetBuild.run(MavenModuleSetBuild.java:543)</span><br><span class="line"> at hudson.model.ResourceController.execute(ResourceController.java:97)</span><br><span class="line"> at hudson.model.Executor.run(Executor.java:427)</span><br><span class="line"> Caused by: java.io.IOException: error=13, Permission denied</span><br><span class="line"> at java.lang.UNIXProcess.forkAndExec(Native Method)</span><br><span class="line"> at java.lang.UNIXProcess.&lt;init&gt;(UNIXProcess.java:247)</span><br><span class="line"> at java.lang.ProcessImpl.start(ProcessImpl.java:134)</span><br><span class="line"> at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)</span><br><span class="line"> ... 12 more</span><br><span class="line"> Finished: FAILURE</span><br><span class="line"></span><br><span class="line">解决办法：</span><br><span class="line">将jenkins默认用户改为root或其他</span><br></pre></td></tr></table></figure><p>&#x2F;&#x2F;修改用户为root或其他<br>vim &#x2F;etc&#x2F;sysconfig&#x2F;jenkins</p><h1 id="JENKINS-USER-”jenkins”-这里面用户直接改为root；"><a href="#JENKINS-USER-”jenkins”-这里面用户直接改为root；" class="headerlink" title="JENKINS_USER&#x3D;”jenkins” 这里面用户直接改为root；"></a>JENKINS_USER&#x3D;”jenkins” 这里面用户直接改为root；</h1><h1 id="保存后重启jenkins服务"><a href="#保存后重启jenkins服务" class="headerlink" title="保存后重启jenkins服务"></a>保存后重启jenkins服务</h1><p>service jenkins restart</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 问题九、解决Jenkins 运行shell脚本是报错，sh :command not found</span><br><span class="line"></span><br><span class="line">解决方案就是在脚本前加上这段代码即可source /etc/profile;</span><br><span class="line"></span><br><span class="line">或者：</span><br><span class="line">在服务器中执行</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>echo $PATH</p><h1 id="打印已经配置的环境变量，"><a href="#打印已经配置的环境变量，" class="headerlink" title="打印已经配置的环境变量，"></a>打印已经配置的环境变量，</h1><p>#如&#x2F;usr&#x2F;share&#x2F;maven&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;install&#x2F;node-v12.14.0-linux-x64&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;install&#x2F;java&#x2F;jdk1.8.0_141&#x2F;&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;install&#x2F;java&#x2F;jdk1.8.0_141&#x2F;&#x2F;jre&#x2F;bin:&#x2F;root&#x2F;bin</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">系统配置-》全局属性-》环境变量增加</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>键：PATH<br>值：&#x2F;usr&#x2F;share&#x2F;maven&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;install&#x2F;node-v12.14.0-linux-x64&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;install&#x2F;java&#x2F;jdk1.8.0_141&#x2F;&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;install&#x2F;java&#x2F;jdk1.8.0_141&#x2F;&#x2F;jre&#x2F;bin:&#x2F;root&#x2F;bin</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 问题十、解决内存溢出</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>vim &#x2F;etc&#x2F;sysconfig&#x2F;jenkins<br>修改 JENKINS_JAVA_OPTIONS&#x3D;”-Djava.awt.headless&#x3D;true”为：</p><pre><code>## 相关文档[jenkins构建job后自动发钉钉消息通知](https://blog.csdn.net/liujingqiu/article/details/87977396)</code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;CentOS7下yum安装Jenkins&quot;&gt;&lt;a href=&quot;#CentOS7下yum安装Jenkins&quot; class=&quot;headerlink&quot; title=&quot;CentOS7下yum安装Jenkins&quot;&gt;&lt;/a&gt;CentOS7下yum安装Jenkins&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>CentOS7搭建Nexus+Maven私人仓库</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/CentOS7%E6%90%AD%E5%BB%BANexus-Maven%E7%A7%81%E4%BA%BA%E4%BB%93%E5%BA%93.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E8%BF%90%E7%BB%B4/CentOS7%E6%90%AD%E5%BB%BANexus-Maven%E7%A7%81%E4%BA%BA%E4%BB%93%E5%BA%93.html</id>
    <published>2019-10-26T00:03:30.000Z</published>
    <updated>2021-03-31T14:49:48.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>Nexus是Maven的仓库管理器，pro版本收费，oss开源版是不收费的。</p><span id="more"></span><p>下载地址：<br><a href="https://www.sonatype.com/nexus-repository-oss">https://www.sonatype.com/nexus-repository-oss</a>，下载了几次没有下载下来，无法访问。</p><h2 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h2><h2 id="安装maven"><a href="#安装maven" class="headerlink" title="安装maven"></a>安装maven</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">yum install maven</span><br><span class="line">mvn -version</span><br><span class="line"></span><br><span class="line"><span class="comment"># maven home  /usr/share/maven</span></span><br><span class="line"></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="comment"># 在文档的最后一行，加入如下文件</span></span><br><span class="line">MAVEN_HOME=/usr/share/maven</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;MAVEN_HOME&#125;</span>/bin:<span class="variable">$&#123;PATH&#125;</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置配置文件，使刚才配置生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>linux下maven仓库默认位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /root/.m2/repository/</span><br></pre></td></tr></table></figure><h2 id="安装nexus"><a href="#安装nexus" class="headerlink" title="安装nexus"></a>安装nexus</h2><p>打开&#x2F;mnt目录，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> nexus-3.18.1-1.tar.gz  /mnt/</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zvxf nexus-3.18.1-1.tar.gz</span><br><span class="line"><span class="comment"># 目录重命名</span></span><br><span class="line"><span class="built_in">mv</span> nexus-3.18.1-01/ nexus</span><br><span class="line"><span class="comment">## 安装目录 /mnt/nexus/</span></span><br><span class="line"></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="comment"># 结尾加上</span></span><br><span class="line"><span class="built_in">export</span> RUN_AS_USER=root</span><br><span class="line"><span class="comment"># 刷新</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改运行nexus所使用的用户 /mnt/nexus/bin</span></span><br><span class="line">vim nexus.rc</span><br><span class="line"><span class="comment"># 修改内容为</span></span><br><span class="line">run_as_user=<span class="string">&quot;root&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改nexus默认端口 本文配置位置/mnt/nexus/etc，nexus-default.properties</span></span><br><span class="line">application-port=8088 <span class="comment"># 默认为8081</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改nexus数据及日志的存储位置等/mnt/nexus/etc，nexus.vmoptions</span></span><br><span class="line"></span><br><span class="line">/mnt/nexus/bin/nexus.vmoptions</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 启动nexus，/mnt/nexus/bin中 启动web界面</span></span><br><span class="line">./nexus run &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 启动nexus</span></span><br><span class="line">./nexus start</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看nexus运行状态</span></span><br><span class="line">./nexus status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装到系统服务</span></span><br><span class="line"><span class="built_in">cp</span> nexus /etc/init.d/nexus</span><br><span class="line">chkconfig --add nexus</span><br><span class="line">chkconfig --levels 345 nexus on</span><br><span class="line"><span class="comment"># 启动 nexus</span></span><br><span class="line"></span><br><span class="line">systemctl start nexus</span><br></pre></td></tr></table></figure><h2 id="maven私服仓库配置"><a href="#maven私服仓库配置" class="headerlink" title="maven私服仓库配置"></a>maven私服仓库配置</h2><h3 id="设置nexus仓库账号和密码"><a href="#设置nexus仓库账号和密码" class="headerlink" title="设置nexus仓库账号和密码"></a>设置nexus仓库账号和密码</h3><blockquote><p><code>linux</code>中<code>maven</code>的<code>settings.xml</code>文件地址为<code>/etc/maven</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">```xml</span><br><span class="line">&lt;servers&gt;</span><br><span class="line">    &lt;server&gt;</span><br><span class="line">        &lt;id&gt;releases&lt;/id&gt;</span><br><span class="line">        &lt;username&gt;admin&lt;/username&gt;</span><br><span class="line">        &lt;password&gt;LoveNexus520!&lt;/password&gt;</span><br><span class="line">    &lt;/server&gt;</span><br><span class="line">    &lt;server&gt;</span><br><span class="line">        &lt;id&gt;snapshots&lt;/id&gt;</span><br><span class="line">        &lt;username&gt;admin&lt;/username&gt;</span><br><span class="line">        &lt;password&gt;LoveNexus520!&lt;/password&gt;</span><br><span class="line">    &lt;/server&gt;</span><br><span class="line">&lt;/servers&gt;</span><br></pre></td></tr></table></figure><h3 id="maven中pom-xml"><a href="#maven中pom-xml" class="headerlink" title="maven中pom.xml"></a>maven中pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--指定从该Nexus仓库下载依赖包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 包含需要连接到远程仓库的信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 远程仓库id，可以用来匹配在settings.xml文件里配置的远程仓库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>public<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 远程仓库名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun nexus<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 远程仓库URL --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://仓库地址url:8081/repository/maven-releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 处理远程仓库里发布版本的下载 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- true或false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 更新构件的频率。Maven会比较本地POM和远程POM的时间戳。选项：always（一直），daily（默认每日），inteval：X（X是以分钟为单位），never（从不）--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">updatePolicy</span>&gt;</span>never<span class="tag">&lt;/<span class="name">updatePolicy</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 当Maven验证构件校验文件失败时怎么做：ignore（忽略），fail（失败），warn（警告） --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">checksumPolicy</span>&gt;</span>ignore<span class="tag">&lt;/<span class="name">checksumPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">updatePolicy</span>&gt;</span>always<span class="tag">&lt;/<span class="name">updatePolicy</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">checksumPolicy</span>&gt;</span>ignore<span class="tag">&lt;/<span class="name">checksumPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 用于定位和排序构件的仓库布局类型-可以使default（默认）或者legacy（遗留） --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--指定管理远程仓库地址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Releases<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://仓库地址url:8081/repository/maven-releases/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Snapshot<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://仓库地址url:8081/repository/maven-snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h3><blockquote><p>Current thread (0x00007ff81004d000):  JavaThread “Unknown thread” [_thread_in_vm, id&#x3D;12757, stack(0x</p></blockquote><p>因为买的腾讯云服务器内存可能小了点，只有2g不到，但是nexus默认配置就是2700m等，因此，在nexus.vmoptions修改配置。重启就发现已经成功了</p><h3 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h3><p>本文配置，nexus3.18版本的密码默认不是admin&#x2F;admin123了，点击登录提示：<br>&#x2F;usr&#x2F;share&#x2F;sonatype-work&#x2F;nexus3&#x2F;admin.password，密码就是这个文件里面的随机密码，账号为admin。</p><h3 id="问题三"><a href="#问题三" class="headerlink" title="问题三"></a>问题三</h3><p>nexus 自动关闭，需要在CentOS 7上添加Swap交换空间:<br><a href="https://blog.csdn.net/zstack_org/article/details/53258588">https://blog.csdn.net/zstack_org&#x2F;article&#x2F;details&#x2F;53258588</a></p><h3 id="问题四"><a href="#问题四" class="headerlink" title="问题四"></a>问题四</h3><p>聚合项目<code>deploy</code>指定<code>module</code>:</p><p>在不发布的模块上增加以下配置即可：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.deploy.skip</span>&gt;</span>true<span class="tag">&lt;/<span class="name">maven.deploy.skip</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Nexus是Maven的仓库管理器，pro版本收费，oss开源版是不收费的。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Java系列-SpringBoot学习笔记1</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/Java%E7%B3%BB%E5%88%97-SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/Java/Java%E7%B3%BB%E5%88%97-SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01.html</id>
    <published>2019-10-18T15:59:27.000Z</published>
    <updated>2020-07-21T17:30:19.684Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SpringBoot项目初始化"><a href="#SpringBoot项目初始化" class="headerlink" title="SpringBoot项目初始化"></a>SpringBoot项目初始化</h2><h2 id="SpringBoot项目的多数据源配置"><a href="#SpringBoot项目的多数据源配置" class="headerlink" title="SpringBoot项目的多数据源配置"></a>SpringBoot项目的多数据源配置</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SpringBoot项目初始化&quot;&gt;&lt;a href=&quot;#SpringBoot项目初始化&quot; class=&quot;headerlink&quot; title=&quot;SpringBoot项目初始化&quot;&gt;&lt;/a&gt;SpringBoot项目初始化&lt;/h2&gt;&lt;h2 id=&quot;SpringBoot项目的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Vue-学习笔记2-Vue登录实例</title>
    <link href="https://lixiaw.github.io/2024_bf/%E5%89%8D%E7%AB%AF/Vue/Vue-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-Vue%E7%99%BB%E5%BD%95%E5%AE%9E%E4%BE%8B.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E5%89%8D%E7%AB%AF/Vue/Vue-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02-Vue%E7%99%BB%E5%BD%95%E5%AE%9E%E4%BE%8B.html</id>
    <published>2019-09-21T12:05:28.000Z</published>
    <updated>2020-07-21T17:30:19.687Z</updated>
    
    
    <summary type="html">关注微信公众号weyoung获取更多内容</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Vue-学习笔记1-Vue常用方法</title>
    <link href="https://lixiaw.github.io/2024_bf/%E5%89%8D%E7%AB%AF/Vue/Vue-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01-Vue%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E5%89%8D%E7%AB%AF/Vue/Vue-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01-Vue%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95.html</id>
    <published>2019-09-21T12:03:04.000Z</published>
    <updated>2020-07-21T17:30:19.687Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本文内容主要是记录Vue中常用的方法，主要包括数据处理方法、DOM、以及生命周期钩子。详细内容请大家参考官方文档，Vue的官方文档描述还是相当详细的。</p><h3 id="选项-数据"><a href="#选项-数据" class="headerlink" title="选项&#x2F;数据"></a>选项&#x2F;数据</h3><p>包含vue的数据处理，主要包括：</p><ul><li>data</li><li>props</li><li>propsData</li><li>computed</li><li>methods</li><li>watch</li></ul><span id="more"></span><h4 id="data"><a href="#data" class="headerlink" title="data"></a>data</h4><p>示例：Login.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container login&quot;</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-12 col-md-5 col-md-offset-4 login-form-div&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-12 text-center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;systemName&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-12 login-title&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-10 col-xs-offset-1 title-tab&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;myTab&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav nav-tabs no-padding text-center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active col-xs-6 no-padding&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#form_login&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;tab&quot;</span>&gt;</span></span><br><span class="line">                登<span class="symbol">&amp;nbsp;</span>录</span><br><span class="line">              <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-6 no-padding&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#form_register&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;tab&quot;</span>&gt;</span>注<span class="symbol">&amp;nbsp;</span>册<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-12 login-content tab-content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;sys/login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">class</span>=<span class="string">&quot;form-horizontal login-form tab-pane fade in active&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">id</span>=<span class="string">&quot;form_login&quot;</span> <span class="attr">role</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--&lt;div class=&quot;form-horizontal login-form tab-pane fade in active&quot;&gt;--&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--sign in--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-10 col-xs-offset-1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;input-group-addon&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control text-info&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;30&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userName&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">id</span>=<span class="string">&quot;userName&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-group&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;input-group-addon&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-lock&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control text-info&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;30&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-group checkbox col-xs-12&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;pull-right&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span>&gt;</span>忘记密码?<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;submit_login&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-block&quot;</span>&gt;</span>登<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!--&lt;/div&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--/sign in--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--sign up--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-horizontal login-form tab-pane fade&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">id</span>=<span class="string">&quot;form_register&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">role</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-10 col-xs-offset-1 input-form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control text-info list-row-space&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;30&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userName&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control text-info list-row-space&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;30&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pass&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control text-info list-row-space&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;30&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">name</span>=<span class="string">&quot;passRep&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;submit_register&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-block list-row-space&quot;</span>&gt;</span>注<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>册</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--/sign up--&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;Login&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">data</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;<span class="attr">systemName</span>: <span class="string">&#x27;lx-platform后台管理系统&#x27;</span>&#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>官网给的文档是：该组件是vue实例的数据对象，只接受function，vue会递归将data的属性转换为getter&#x2F;setter，返回的数据对象必须是纯粹的对象（含有零个或多个的key&#x2F;value对），data只能是数据，不推荐观察拥有状态行为的对象。</p></blockquote><p>本人理解，简单的使用如上，html中使用双花括号获取属性值。</p><h4 id="props"><a href="#props" class="headerlink" title="props"></a>props</h4><p>props 可以是数组或对象，用于接收来自父组件的数据，通过属性给模板赋值。<br>可以使用以下对象：</p><ul><li>type：可以是下列原生构造函数中的一种：String、Number、Boolean、Array、Object、Date、Function、Symbol、任何自定义构造函数、或上述内容组成的数组。</li><li>default: any 为该 prop 指定一个默认值。</li><li>required: Boolean 定义该 prop 是否是必填项。</li><li>validator: Function 自定义验证函数会将该 prop 的值作为唯一的参数代入。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mycomponent</span> <span class="attr">message</span>=<span class="string">&quot;这个就是信息&quot;</span> <span class="attr">:mydata</span>=<span class="string">&quot;&#123;username: &#x27;用户名&#x27;, age: 26&#125;&quot;</span> <span class="attr">name-style</span>=<span class="string">&quot;color:red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mycomponent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">import Vue from &#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">var mycomponent = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  props: &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    message: &#x27;&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    mydata: &#123;&#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    // 这里的驼峰key，对应上面的短中杠key</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    nameStyle: &#123;&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  &#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  template: &#x27;<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: white&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">message</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;nameStyle&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">mydata.username</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">Vue.component(&#x27;mycomponent&#x27;, mycomponent)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">var vue2 = new Vue(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  el: &#x27;#app2&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>template</code>标签中的内容，以及message、nameStyle、mydata.username值就是通过props传递过来的值。<br>在组件中使用props传值的时候默认传的是字符串，如果要传递对象的话，需要使用v-bind来传值；props中就是定义一些默认的值，不能直接修改props，只能间接的通过data来修改。</p><h4 id="propsData"><a href="#propsData" class="headerlink" title="propsData"></a>propsData</h4><p>作用：创建实例时传递props，只用于new创建的实例中。示例如下，可以看到显示效果已经变了：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mycomponent</span> <span class="attr">message</span>=<span class="string">&quot;这个就是信息&quot;</span> <span class="attr">:mydata</span>=<span class="string">&quot;&#123;username: &#x27;用户名&#x27;, age: 26&#125;&quot;</span> <span class="attr">name-style</span>=<span class="string">&quot;color:red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mycomponent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">import Vue from &#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">var mycomponent = Vue.extend(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  props: &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    message: &#x27;&#x27;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    mydata: &#123;&#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    // 这里的驼峰key，对应上面的短中杠key</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    nameStyle: &#123;&#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  &#125;,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  template: &#x27;<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: white&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">message</span> &#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;nameStyle&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">mydata.username</span>&#125;&#125;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>&#x27;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">&#125;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">new mycomponent(&#123;propsData: &#123;message: &#x27;修改后的信息&#x27;, mydata: &#123;username: &#x27;用户名123&#x27;&#125;, nameStyle: &#x27;color: yellow&#x27;&#125;&#125;).$mount(&quot;#app2&quot;)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">Vue.component(&#x27;mycomponent&#x27;, mycomponent)</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="computed"><a href="#computed" class="headerlink" title="computed"></a>computed</h4><p>作用：computed的作用就是数据的计算，如定义add、minus、或者字符串拼接之类的计算等，可以直接使用双花括号将值渲染到模板中，示例方法如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: white&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; reverse &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">data</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">message</span>: <span class="string">&#x27;weyoung&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">reverse</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">message</span>.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>页面上显示的内容如下：<code>weyoung gnuoyew</code></p><h4 id="methods"><a href="#methods" class="headerlink" title="methods"></a>methods</h4><blockquote><p>methods 将被混入到 Vue 实例中。可以直接通过 VM 实例访问这些方法，或者在指令表达式中使用。方法中的 this 自动绑定为 Vue 实例。</p></blockquote><p>示例如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: white&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;sayHello&quot;</span> <span class="attr">v-text</span>=<span class="string">&quot;myName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">data</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">myName</span>: <span class="string">&#x27;点我点我点我&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">sayHello</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>console打印结果如下：</p><p><img src="http://img.wanglixia.top/methods%E6%96%B9%E6%B3%95%E6%89%93%E5%8D%B0-2019921232412.png" alt="methods方法打印-2019921232412"></p><h4 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h4><blockquote><p>一个对象，键是需要观察的表达式，值是对应回调函数。值也可以是方法名，或者包含选项的对象。Vue 实例将会在实例化时调用 $watch()，遍历 watch 对象的每一个属性。</p></blockquote><p>watch字面上理解就是监测Vue实例上的数据变动。</p><p>示例如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;mydata.name&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>新用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;newName&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">data</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">mydata</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&#x27;weyoung&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>: <span class="number">26</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">newName</span>: <span class="string">&#x27;寒江夜雨&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">mydata</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">handler</span>: <span class="keyword">function</span> (<span class="params">val, oldVal</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---mydata watch---&#x27;</span>, val.<span class="property">name</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">deep</span>: <span class="literal">true</span><span class="comment">// 对象内部的属性监听，也叫深度监听;可以看到，注释掉deep:true这一行的时候，监测不到值变化。</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">newName</span>: <span class="keyword">function</span> (<span class="params">val, oldVal</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---newName watch---&#x27;</span>, <span class="variable language_">this</span>.<span class="property">newName</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果如下：<br><img src="http://img.wanglixia.top/vue-watch%E7%9A%84%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C-201992295138.png" alt="vue-watch的运行结果-201992295138"></p><h3 id="选项-DOM"><a href="#选项-DOM" class="headerlink" title="选项&#x2F;DOM"></a>选项&#x2F;DOM</h3><p>包含Vue的DOM操作，主要包括：</p><ul><li>el</li><li>template</li><li>render</li><li>renderError</li></ul><h4 id="el"><a href="#el" class="headerlink" title="el"></a>el</h4><blockquote><p>提供一个在页面上已存在的 DOM 元素作为 Vue 实例的挂载目标。可以是 CSS 选择器，也可以是一个 HTMLElement 实例。在实例挂载之后，元素可以用 vm.$el 访问。</p></blockquote><p><strong>运行时+编译器 vs 只包含运行时</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 需要编译器</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;&#123;&#123; hi &#125;&#125;&lt;/div&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不需要编译器</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="title function_">render</span> (h) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">h</span>(<span class="string">&#x27;div&#x27;</span>, <span class="variable language_">this</span>.<span class="property">hi</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="template"><a href="#template" class="headerlink" title="template"></a>template</h4><p>Vue中的template的三种写法：</p><p>第一种写法，直接写在构造器里：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue中template的用法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">&#x27;&lt;h2&gt;vue中template的第一种用法&lt;/h2&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二种写法，直接写在html中的template标签里面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue中template的用法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;mytemp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>vue中template的第二种用法<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">&#x27;#mytemp&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第三种写法，写在script标签里面，官方推荐写法，script标签的type加上“template”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue中template的用法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;x-template&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mytemp&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>vue中template的第三种用法<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">template</span>: <span class="string">&#x27;#mytemp&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="render"><a href="#render" class="headerlink" title="render"></a>render</h4><blockquote><p>该渲染函数接收一个 createElement 方法作为第一个参数用来创建 VNode。如果组件是一个函数组件，渲染函数还会接收一个额外的 context 参数，为没有实例的函数组件提供上下文信息。</p></blockquote><h4 id="renderError"><a href="#renderError" class="headerlink" title="renderError"></a>renderError</h4>]]></content>
    
    
    <summary type="html">关注微信公众号weyoung获取更多内容</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Vue-学习笔记0-独立项目搭建</title>
    <link href="https://lixiaw.github.io/2024_bf/%E5%89%8D%E7%AB%AF/Vue/Vue-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B00-%E7%8B%AC%E7%AB%8B%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E5%89%8D%E7%AB%AF/Vue/Vue-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B00-%E7%8B%AC%E7%AB%8B%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA.html</id>
    <published>2019-09-20T12:57:26.000Z</published>
    <updated>2020-07-21T17:30:19.686Z</updated>
    
    <content type="html"><![CDATA[<p>搭建Vue+Webpack项目，使用vue-cli搭建项目。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>vue独立项目依赖node的npm包管理器，所以需要先安装node。<br>相关的npm常用命令文章：</p><ul><li><a href="%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/Npm-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html">Npm-常用命令，点击访问</a></li><li><a href="https://cn.vuejs.org/v2/guide/">Vue官方文档，点击访问</a></li></ul><span id="more"></span><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="安装vue-cli脚手架"><a href="#安装vue-cli脚手架" class="headerlink" title="安装vue-cli脚手架"></a>安装vue-cli脚手架</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g vue-cli</span><br></pre></td></tr></table></figure><h3 id="选择webpack模板"><a href="#选择webpack模板" class="headerlink" title="选择webpack模板"></a>选择webpack模板</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vue init webpack 项目名称</span></span><br><span class="line">vue init webpack lx-note-front</span><br></pre></td></tr></table></figure><p><img src="http://img.wanglixia.top/vue%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE-2019920211313.png" alt="vue初始化项目-2019920211313"></p><p>等待命令执行完毕。</p><p><img src="http://img.wanglixia.top/vue%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96%E7%BB%93%E6%9E%9C-201992021157.png" alt="vue初始化项目初始化结果-201992021157"></p><p>由以上界面我们可以看到，要想运行该项目，可以执行命令：<code>cd lx-note-front</code> 打开项目目录，命令执行完成后的项目结构：</p><p><img src="http://img.wanglixia.top/vue%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96%E7%BB%93%E6%9E%9C%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84-2019920211645.png" alt="vue初始化项目初始化结果项目结构-2019920211645"></p><h3 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h3><p>执行命令<code>npm run dev</code> 命令启动该项目，项目启动效果如下：</p><p><img src="http://img.wanglixia.top/vue%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C%E6%95%88%E6%9E%9C-2019920212216.png" alt="vue项目运行效果-2019920212216"></p><p>出现以上界面说明我们已经搭建成功。</p><h3 id="项目目录讲解"><a href="#项目目录讲解" class="headerlink" title="项目目录讲解"></a>项目目录讲解</h3><ul><li>build: webpack配置相关；<ul><li>build.js: npm run build所执行的脚本；</li><li>check-versions.js: 检查npm和node的版本；</li><li>utils.js: 工具方法，主要用于生成CSSLoader和styleLoader配置；</li><li>vue-loader.conf.js: vueloader的配置信息；</li><li>webpack.base.conf.js: dev和prod的公共配置；</li><li>webpack.dev.conf.js: dev环境的配置；</li><li>webpack.prod.conf.js: prod环境的配置；</li></ul></li><li>config: 环境变量配置；<ul><li>dev.env.js: dev环境变量配置；</li><li>index.js dev和prod环境的一些基本配置；</li><li>prod.env.js: prod环境变量配置；</li></ul></li><li>node_modules: npm安装的依赖代码库；</li><li>src: 项目源码；</li><li>static: 存放css、js等静态资源；<ul><li>.gitkeep: 使这个空文件也能够提交到版本库；</li></ul></li><li>.babbelrc: babel相关配置（babel：将ES6语法转换成大多数浏览器可以识别的ES5语法）；</li><li>.editorconfig: 编辑器的配置，修改编码、缩进等；</li><li>.eslintignore: 设置忽略语法检查的目录文件；</li><li>.eslintrc.js: eslint的配置文件，管理和检测js代码风格的工具；</li><li>.gitignore: git不纳入版本，需要忽略的文件；</li><li>.postcssrc.js: 用于添加浏览器私缀（兼容不同浏览器的css样式）；</li><li>index.html: 入口html文件；</li><li>package-lock.json: 是锁定安装时的包的版本号，并且需要上传到git，用以保证开发人员的开发环境一致；</li><li>package.json: 项目的配置文件，项目描述、命令、依赖插件等；</li><li>README.md: 项目描述等主要文档；</li></ul><h2 id="webpack打包vue项目"><a href="#webpack打包vue项目" class="headerlink" title="webpack打包vue项目"></a>webpack打包vue项目</h2><h3 id="webpack是什么？"><a href="#webpack是什么？" class="headerlink" title="webpack是什么？"></a>webpack是什么？</h3><p>webpack是个模块打包器，能够根据html、css、js、图片等文件之间的依赖关系将所有的模块打包起来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新生成打包js</span></span><br><span class="line">webpack --display-modules --display-chunks --config webpack.config.js</span><br><span class="line"><span class="comment"># 实时自动打包 webpack -w</span></span><br><span class="line">webpack --watch</span><br><span class="line"><span class="comment"># 显示异常信息</span></span><br><span class="line">webpack --display-error-details</span><br><span class="line"><span class="comment"># 压缩混淆脚本</span></span><br><span class="line">webpack -p </span><br><span class="line"><span class="comment"># 提供source map，方便调式代码</span></span><br><span class="line">webpack -d</span><br></pre></td></tr></table></figure><h3 id="webpack-vue项目中安装Bootstrap"><a href="#webpack-vue项目中安装Bootstrap" class="headerlink" title="webpack vue项目中安装Bootstrap"></a>webpack vue项目中安装Bootstrap</h3><p>Bootstrap依赖jQuery，因此引入Bootstrap之前需要引入jQuery，jQuery依赖popper.js：<br>安装过程：</p><ol><li>安装popper</li><li>安装jquery</li><li>安装bootstrap</li></ol><h4 id="引入popper依赖"><a href="#引入popper依赖" class="headerlink" title="引入popper依赖"></a>引入popper依赖</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install popper.js --save-dev</span><br></pre></td></tr></table></figure><h4 id="引入jQuery依赖"><a href="#引入jQuery依赖" class="headerlink" title="引入jQuery依赖"></a>引入jQuery依赖</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install jquery</span><br><span class="line"><span class="comment"># 或者限定jQuery的版本</span></span><br><span class="line">npm install jquery@3.3.1 --save-dev</span><br></pre></td></tr></table></figure><h4 id="引入Bootstrap依赖"><a href="#引入Bootstrap依赖" class="headerlink" title="引入Bootstrap依赖"></a>引入Bootstrap依赖</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install bootstrap@3.4.1 --save-dev</span><br></pre></td></tr></table></figure><h4 id="引入jquery和bootstrap"><a href="#引入jquery和bootstrap" class="headerlink" title="引入jquery和bootstrap"></a>引入jquery和bootstrap</h4><ol><li>在build目录下的webpack.base.conf.js中加入：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>配置jQuery：在上述文件中找到 module.exports找到plugins，没有的话请创建，格式如下：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> webpack.<span class="title class_">ProvidePlugin</span>(&#123;</span><br><span class="line">      <span class="attr">$</span>: <span class="string">&#x27;jquery&#x27;</span>,</span><br><span class="line">      <span class="attr">jQuery</span>: <span class="string">&#x27;jquery&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;windows.jQuery&#x27;</span>: <span class="string">&#x27;jquery&#x27;</span>,</span><br><span class="line">      <span class="title class_">Popper</span>: [<span class="string">&#x27;popper.js&#x27;</span>, <span class="string">&#x27;default&#x27;</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure></li></ol><p>在main.js 中引入jQuery和bootstrap</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;bootstrap/dist/css/bootstrap.min.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;bootstrap/dist/js/bootstrap.min&#x27;</span></span><br></pre></td></tr></table></figure><p>完了之后可以添加bootstrap的样式及带有$符号的方法可以测试是否引入成功。</p><h4 id="引入其他插件"><a href="#引入其他插件" class="headerlink" title="引入其他插件"></a>引入其他插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install bootstrap-table@1.14.2 --save-dev</span><br><span class="line">npm install admin-lte@2.4.5 --save-dev</span><br><span class="line">npm install bootstrap-dialog@1.34.6 --save-dev</span><br><span class="line">npm install bootstrapvalidator@0.5.4 --save-dev</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">关注微信公众号weyoung获取更多内容</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>MongoDB系列-1-查询</title>
    <link href="https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E7%B3%BB%E5%88%97-1-%E6%9F%A5%E8%AF%A2.html"/>
    <id>https://lixiaw.github.io/2024_bf/%E6%9C%8D%E5%8A%A1%E7%AB%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB%E7%B3%BB%E5%88%97-1-%E6%9F%A5%E8%AF%A2.html</id>
    <published>2019-09-20T06:26:11.000Z</published>
    <updated>2020-07-21T17:30:19.690Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MongoDB系列-1-查询"><a href="#MongoDB系列-1-查询" class="headerlink" title="MongoDB系列-1-查询"></a>MongoDB系列-1-查询</h2><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#语法格式</span></span><br><span class="line">db.collection.find(query, projection)</span><br></pre></td></tr></table></figure><ul><li>query ：可选，指定查询条件;</li><li>projection : 查询时返回文档中所有键值，默认忽略，忽略即可</li></ul><span id="more"></span><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">db.status.find(&#123;&#125;)</span><br><span class="line"><span class="comment"># 2 和1等价</span></span><br><span class="line">db.getCollection(<span class="string">&#x27;status&#x27;</span>).find(&#123;&#125;)</span><br><span class="line"><span class="comment"># 3 和1、2等价</span></span><br><span class="line">db.getCollection(<span class="string">&#x27;emrStatus&#x27;</span>).find()</span><br><span class="line"><span class="comment"># 4 .pretty() 以格式化的方式来显示文档</span></span><br><span class="line">db.getCollection(<span class="string">&#x27;status&#x27;</span>).find(&#123;&#125;).pretty()</span><br></pre></td></tr></table></figure><h3 id="findOne"><a href="#findOne" class="headerlink" title="findOne"></a>findOne</h3><p>和find方法类似。</p><h2 id="Aggregation聚合查询"><a href="#Aggregation聚合查询" class="headerlink" title="Aggregation聚合查询"></a>Aggregation聚合查询</h2><p>使用Spring的<code>org.springframework.data.mongodb.core.aggregation.Aggregation</code>类，类结构如下：<br><img src="http://img.wanglixia.top/Aggregation-2019920144855.png" alt="Aggregation-2019920144855"></p><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><ul><li>$project: 从子文档中提取字段，可以重命名字段；</li><li>$match: 实现查找的功能；</li><li>$limit: 接受一个数字参数n，返回结果集中前n个文档；</li><li>$skip: 接受一个数字参数n，丢弃结果集中的前n个文档。效率比较低，依然会遍历前n个文档；</li><li>$unwind: 将一个包含数组的文档切分成多个；</li><li>$group: 统计操作，提供了一系列自命令；</li><li>$avg: </li><li>$sum:</li><li>$sort: 排序。</li><li>$lookup: 关联查询；</li></ul>]]></content>
    
    
    <summary type="html">关注微信公众号weyoung获取更多内容</summary>
    
    
    
    
  </entry>
  
</feed>
